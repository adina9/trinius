[{"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js":"1","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx":"2","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js":"4","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx":"5","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx":"6","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx":"7","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx":"8","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx":"9","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js":"10","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js":"11","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js":"12","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js":"13","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js":"14","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx":"15","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js":"16","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js":"17","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx":"18","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx":"19","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx":"20","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx":"21","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx":"22","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx":"23","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx":"24","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx":"25","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx":"26","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx":"27","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx":"28","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx":"29","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx":"30","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx":"31","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js":"32","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\httpService.js":"33","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\dataReducer.js":"34","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\dataAction.js":"35","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\dataService.js":"36","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\LoadCycle.jsx":"37","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\session-storage.js":"38","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\AboutMe.jsx":"39"},{"size":995,"mtime":1626128284564,"results":"40","hashOfConfig":"41"},{"size":2615,"mtime":1640114946048,"results":"42","hashOfConfig":"41"},{"size":364,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":5064,"mtime":499162500000,"results":"44","hashOfConfig":"41"},{"size":6054,"mtime":1640113321613,"results":"45","hashOfConfig":"41"},{"size":15352,"mtime":1640211180039,"results":"46","hashOfConfig":"41"},{"size":1193,"mtime":1640112377900,"results":"47","hashOfConfig":"41"},{"size":1195,"mtime":1624258514557,"results":"48","hashOfConfig":"41"},{"size":9519,"mtime":1626768436062,"results":"49","hashOfConfig":"41"},{"size":640,"mtime":1626767910595,"results":"50","hashOfConfig":"41"},{"size":235,"mtime":1608723174900,"results":"51","hashOfConfig":"52"},{"size":15740,"mtime":1640108365865,"results":"53","hashOfConfig":"41"},{"size":3365,"mtime":1626768043390,"results":"54","hashOfConfig":"41"},{"size":252,"mtime":1640017709049,"results":"55","hashOfConfig":"41"},{"size":15787,"mtime":1640121972573,"results":"56","hashOfConfig":"41"},{"size":4464,"mtime":1626768009845,"results":"57","hashOfConfig":"41"},{"size":11905,"mtime":1626734238523,"results":"58","hashOfConfig":"41"},{"size":14921,"mtime":1640126689979,"results":"59","hashOfConfig":"41"},{"size":18782,"mtime":1640032270274,"results":"60","hashOfConfig":"41"},{"size":4155,"mtime":1640113710634,"results":"61","hashOfConfig":"41"},{"size":1900,"mtime":1625960518754,"results":"62","hashOfConfig":"41"},{"size":2146,"mtime":1624921953761,"results":"63","hashOfConfig":"41"},{"size":581,"mtime":1621460404394,"results":"64","hashOfConfig":"41"},{"size":1355,"mtime":1623582901343,"results":"65","hashOfConfig":"41"},{"size":1239,"mtime":1640113788789,"results":"66","hashOfConfig":"41"},{"size":1026,"mtime":1625957805015,"results":"67","hashOfConfig":"41"},{"size":1023,"mtime":1625960621115,"results":"68","hashOfConfig":"41"},{"size":4210,"mtime":1640210873655,"results":"69","hashOfConfig":"41"},{"size":9728,"mtime":1625690789885,"results":"70","hashOfConfig":"41"},{"size":809,"mtime":1625960562177,"results":"71","hashOfConfig":"41"},{"size":1285,"mtime":1640113954026,"results":"72","hashOfConfig":"41"},{"size":454,"mtime":1624974391166,"results":"73","hashOfConfig":"41"},{"size":1079,"mtime":1623878732237,"results":"74","hashOfConfig":"41"},{"size":253,"mtime":1623791350173,"results":"75","hashOfConfig":"41"},{"size":354,"mtime":1623794048069,"results":"76","hashOfConfig":"41"},{"size":575,"mtime":1624974481168,"results":"77","hashOfConfig":"41"},{"size":232,"mtime":1625957267871,"results":"78","hashOfConfig":"41"},{"size":303,"mtime":1625154615320,"results":"79","hashOfConfig":"41"},{"size":1617,"mtime":1625960703281,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"jdl7dq",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qzk62e",{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"83"},"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js",[],["178","179"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx",["180","181"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n//cmps:\r\nimport { Settings } from '../pages/Settings'\r\nimport { Logout } from './Logout'\r\nimport { Home } from '../pages/Home';\r\nimport { AboutMe } from '../pages/AboutMe'\r\n\r\n//imgs:\r\nimport avatarSrc from '../assets/imgs/user.png'\r\nimport logoSrc from '../assets/imgs/bookLogo.png'\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\n\r\n//icons:\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n//functions:\r\nimport { logout } from '../store/actions/userAction.js'\r\nimport { loadData } from '../store/actions/dataAction'\r\nimport { storageService } from '../services/session-storage'\r\n\r\nconst menuOptions = [{ txt: 'home', to: 'home' }, { txt: 'adding', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }, { txt: 'settings', to: 'settings' }, { txt: 'about', to: 'about' }, { txt: 'about me', to: 'me' }]\r\n\r\nexport const AppHeader = ({ history }) => {\r\n\r\n    const { data } = useSelector(state => state.dataModule)\r\n    const dispatch = useDispatch()\r\n\r\n    const [currUser, setCurrUser] = useState({})\r\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false)\r\n    const [isProfileOpen, setIsProfileOpen] = useState(false)\r\n    const [isAboutMeOpen, setIsAboutMeOpen] = useState(false)\r\n    const [className, setClassName] = useState(false)\r\n\r\n    const navForDisplay = () => {\r\n        const currUser = storageService.load('currUser')\r\n        return currUser?.game?.lang === 'English' ?\r\n            [{ txt: 'home', to: 'about' }, { txt: 'editor', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }]\r\n            : [{ txt: 'בית', to: 'about' }, { txt: 'עריכה', to: 'adding' }, { txt: 'סטטיסטיקה', to: 'dashboard' }]\r\n    }\r\n\r\n    useEffect(async () => {\r\n        await dispatch(loadData())\r\n        const user = storageService.load('currUser')\r\n        if (!user?.nickname) history.push(\"/\")\r\n        setCurrUser({ ...user })\r\n    }, [])\r\n\r\n    const navOps = navForDisplay()\r\n    const { nickname, image, game } = currUser\r\n    var isEn = game?.lang === 'English' ? true : false\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"app-header pf\">\r\n                <div className=\"inner flex\">\r\n                    <div className=\"flex j-between\">\r\n                        <img src={logoSrc} alt=\"\" />\r\n                        <p>trinius</p>\r\n                    </div>\r\n                    <div className=\"wider-menu flex\">\r\n                        {navOps.map((o, idx) => <NavLink to={`/${o.to}`} exact={true} activeClassName=\"active-link\" key={idx}>{o.txt}</NavLink>)}\r\n                        <p id={`${isSettingsOpen ? 'settings' : ''}`} onClick={() => setIsSettingsOpen(!isSettingsOpen)}>{isEn ? 'Settings' : 'הגדרות'}<span><SettingsIcon /></span></p>\r\n                        <p style={{ width: '100%' }} onClick={() => setIsAboutMeOpen(!isAboutMeOpen)}>{isEn ? 'About Me' : 'מי אני'}<span><InfoIcon /></span></p>\r\n                        <Logout logout={dispatch(logout)} data={data} history={history} />\r\n                    </div>\r\n                    <MenuIcon id={`${className ? 'menu-icon' : ''}`} className=\"menu-icon pa\" onClick={() => setClassName(!className)} alt=\"\" />\r\n\r\n                    <div className=\"backImgs\">\r\n                        <img src={clock} alt=\"\" />\r\n                        <img src={round} alt=\"\" />\r\n                        <img src={finish} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <section id=\"app-menu\" className={`menu ${className ? 'open' : ''}`} onBlur={(ev) => {\r\n                    ev.stopPropagation()\r\n                    setClassName(false)\r\n                }}>\r\n                    <div className=\"little-profile\">\r\n                        <img src={image ? image?.src : avatarSrc} style={{ backgroundColor: image?.bgClr }} alt=\"\" className=\"flex\" />\r\n                        <p className=\"tac\">{nickname}</p>\r\n                    </div>\r\n                    <div className=\"menu-options flex column\">\r\n                        {menuOptions.map((o, idx) => <NavLink to={`/${o.to}`} onClick={() => setClassName(false)} exact={true} activeClassName=\"active-menu-link\" key={idx}>{o.txt}</NavLink>)}\r\n                        <img src={logoSrc} alt=\"\" />\r\n                    </div>\r\n                </section>\r\n\r\n            </header>\r\n\r\n            <section id=\"menu\" className={`settings-menu ${isSettingsOpen ? 'open' : ''}`}><Settings data={data} isOnDesktop={true} /></section>\r\n\r\n            <section className={`side-aboutMe ${isAboutMeOpen ? 'open' : ''}`}><AboutMe /></section>\r\n\r\n            <div className=\"left-area\">\r\n\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <div className=\"profile flex a-center j-center pa ttc tac\" onClick={() => setIsProfileOpen(!isProfileOpen)}>\r\n                    <p>{isEn ? 'Your Profile' : 'פרופיל'}</p>\r\n                    <ArrowRightIcon />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`back-dark ${isProfileOpen ? 'shown' : ''}`}> </div>\r\n            <div className={`profile-div ${isProfileOpen ? 'open' : ''}`}>  <Home data={data} isOnDesktop={true} /></div>\r\n\r\n        </React.Fragment >\r\n    )\r\n}","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx",["182","183","184"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n//functions:\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { updateNickname, updateUserImage } from '../store/actions/userAction.js'\r\nimport { updateCountry } from '../store/actions/gameAction.js'\r\n\r\nimport avatarSrc from '../assets/imgs/user.png'\r\n\r\nimport a01 from '../assets/imgs/avatars/avatar-01.png'\r\nimport a02 from '../assets/imgs/avatars/avatar-02.png'\r\nimport a03 from '../assets/imgs/avatars/avatar-03.png'\r\nimport a04 from '../assets/imgs/avatars/avatar-04.png'\r\nimport a05 from '../assets/imgs/avatars/avatar-05.png'\r\nimport a06 from '../assets/imgs/avatars/avatar-06.png'\r\nimport a07 from '../assets/imgs/avatars/avatar-07.png'\r\nimport a08 from '../assets/imgs/avatars/avatar-08.png'\r\nimport a09 from '../assets/imgs/avatars/avatar-09.png'\r\nimport a10 from '../assets/imgs/avatars/avatar-10.png'\r\nimport a11 from '../assets/imgs/avatars/avatar-11.png'\r\nimport a12 from '../assets/imgs/avatars/avatar-12.png'\r\nimport a13 from '../assets/imgs/avatars/avatar-13.png'\r\nimport a14 from '../assets/imgs/avatars/avatar-14.png'\r\nimport a15 from '../assets/imgs/avatars/avatar-15.png'\r\nimport a16 from '../assets/imgs/avatars/avatar-16.png'\r\nimport a17 from '../assets/imgs/avatars/avatar-17.png'\r\nimport a18 from '../assets/imgs/avatars/avatar-18.png'\r\nimport a19 from '../assets/imgs/avatars/avatar-19.png'\r\nimport a20 from '../assets/imgs/avatars/avatar-20.png'\r\nimport a21 from '../assets/imgs/avatars/avatar-21.png'\r\nimport a22 from '../assets/imgs/avatars/avatar-22.png'\r\nimport a23 from '../assets/imgs/avatars/avatar-23.png'\r\nimport a24 from '../assets/imgs/avatars/avatar-24.png'\r\nimport a25 from '../assets/imgs/avatars/avatar-25.png'\r\nimport a26 from '../assets/imgs/avatars/avatar-26.png'\r\nimport a27 from '../assets/imgs/avatars/avatar-27.png'\r\nimport a28 from '../assets/imgs/avatars/avatar-28.png'\r\nimport a29 from '../assets/imgs/avatars/avatar-29.png'\r\nimport a30 from '../assets/imgs/avatars/avatar-30.png'\r\nimport a31 from '../assets/imgs/avatars/avatar-31.png'\r\nimport a32 from '../assets/imgs/avatars/avatar-32.png'\r\nimport a33 from '../assets/imgs/avatars/avatar-33.png'\r\nimport a34 from '../assets/imgs/avatars/avatar-34.png'\r\nimport a35 from '../assets/imgs/avatars/avatar-35.png'\r\nimport a36 from '../assets/imgs/avatars/avatar-36.png'\r\nimport a37 from '../assets/imgs/avatars/avatar-37.png'\r\nimport a38 from '../assets/imgs/avatars/avatar-38.png'\r\nimport a39 from '../assets/imgs/avatars/avatar-39.png'\r\nimport a40 from '../assets/imgs/avatars/avatar-40.png'\r\nimport a41 from '../assets/imgs/avatars/avatar-41.png'\r\nimport a42 from '../assets/imgs/avatars/avatar-42.png'\r\nimport a43 from '../assets/imgs/avatars/avatar-43.png'\r\nimport a44 from '../assets/imgs/avatars/avatar-44.png'\r\nimport a45 from '../assets/imgs/avatars/avatar-45.png'\r\nimport a46 from '../assets/imgs/avatars/avatar-46.png'\r\nimport a47 from '../assets/imgs/avatars/avatar-47.png'\r\nimport a48 from '../assets/imgs/avatars/avatar-48.png'\r\nimport a49 from '../assets/imgs/avatars/avatar-49.png'\r\nimport a50 from '../assets/imgs/avatars/avatar-50.png'\r\nimport a51 from '../assets/imgs/avatars/avatar-51.png'\r\nimport a52 from '../assets/imgs/avatars/avatar-52.png'\r\nimport a53 from '../assets/imgs/avatars/avatar-53.png'\r\nimport a54 from '../assets/imgs/avatars/avatar-54.png'\r\nimport a55 from '../assets/imgs/avatars/avatar-55.png'\r\nimport a56 from '../assets/imgs/avatars/avatar-56.png'\r\nimport a57 from '../assets/imgs/avatars/avatar-57.png'\r\nimport a58 from '../assets/imgs/avatars/avatar-58.png'\r\nimport a59 from '../assets/imgs/avatars/avatar-59.png'\r\nimport a60 from '../assets/imgs/avatars/avatar-60.png'\r\n\r\n\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport PhotoCameraOutlinedIcon from '@material-ui/icons/PhotoCameraOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport StarsRoundedIcon from '@material-ui/icons/StarsRounded';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\n//cmps:\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx'\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        currUser: {},\r\n        isLoadingImage: true,\r\n        isEditClicked: false,\r\n        nickname: '',\r\n        countryFilter: '',\r\n        currImg: { src: '', bgClr: '' },\r\n        countryClass: \"choose-country flex tac\",\r\n        cc: 'countries-div',\r\n        dc: 'div',\r\n        pc: 'p',\r\n        countriesOpsClass: 'countries-options grid',\r\n        isSelectImgClicked: false,\r\n        currCountry: 'Brazil',\r\n        imgsUrl: [a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60],\r\n        imgsClr: ['antiquewhite', 'cadetblue', '#7bf9adfc', '#d4ff7c', '#85a4bd', '#8c8c8c', '#63a14e', '#656f77', '#a58765', '#4e4b48', '#365041fc', '#7a3131', '#9c9c27', '#79d3de'],\r\n        countries: [\r\n            ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA'],\r\n            ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'גנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית']\r\n        ],\r\n        isChooseCountryClicked: false,\r\n        isCountryChosen: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data, history, isOnDesktop } = this.props\r\n        await this.props.loadData()\r\n        const currUser = storageService.load('currUser')\r\n        const { nickname, image, game } = currUser\r\n        if (!nickname) history.push(\"/\")\r\n\r\n        let { imgsUrl, imgsClr } = this.state\r\n        imgsUrl = imgsUrl.map(s =>\r\n            s = { src: s, bgClr: imgsClr[Math.floor(Math.random() * 14)] }\r\n        )\r\n\r\n        this.setState({\r\n            nickname,\r\n            isSelectImgClicked: image.src.slice(14, 15) === 'u',\r\n            imgsUrl,\r\n            currCountry: game.country,\r\n            currImg: image,\r\n            currUser\r\n        })\r\n        setTimeout(() => this.setState({ isLoadingImage: false }), 200)\r\n    }\r\n\r\n    importAll = (requires) => {\r\n        let images = {};\r\n        requires.keys().forEach((item) => {\r\n            images[item.replace(\"./\", \"\")] = item;\r\n        });\r\n        return { ...images };\r\n    }\r\n\r\n    handleChange = ({ target }) => this.setState({ nickname: target.value })\r\n    handleCountryChange = ({ target }) => this.setState({ countryFilter: target.value })\r\n\r\n    selectImg = async (ev, imgSrc) => {\r\n        ev.preventDefault()\r\n        this.setState({ isSelectImgClicked: false, currImg: imgSrc })\r\n        const { data } = this.props\r\n        await this.props.updateUserImage(data, this.state.currUser, imgSrc)\r\n    }\r\n\r\n    onUpdateCountry = async (ev, c) => {\r\n        const { data } = this.props\r\n        ev.preventDefault()\r\n        this.setState({ currCountry: c })\r\n        await this.props.updateCountry(data, this.state.currUser, c)\r\n    }\r\n\r\n    get countriesForDisplay() {\r\n        let { countries, countryFilter, currUser } = this.state\r\n        var currCountriesArr = countries[currUser?.game?.lang === 'English' ? 0 : 1]\r\n        currCountriesArr = currCountriesArr.filter(c => c.includes(countryFilter))\r\n        return currCountriesArr\r\n    }\r\n\r\n    txtObj = (v) => v ? {\r\n        about: 'ABOUT',\r\n        placeholder: 'A Capital Letter...',\r\n        points: 'Points',\r\n        avatar: 'SELECT YOUR AVATAR',\r\n        play: 'Play'\r\n    } : {\r\n        about: '',\r\n        placeholder: 'חפש/י מדינה...',\r\n        points: 'נקודות',\r\n        avatar: 'בחר/י תמונה',\r\n        play: 'שחק/י'\r\n    }\r\n\r\n    render() {\r\n        const { currUser, isLoadingImage, imgsUrl, isEditClicked, nickname, currImg, isSelectImgClicked, countryFilter, currCountry, countryClass, isChooseCountryClicked, cc, dc, pc, countriesOpsClass } = this.state\r\n        const { isOnDesktop, data } = this.props\r\n        const { pointsObj, image, game } = currUser\r\n        var isEn = currUser?.game?.lang === 'English'\r\n        const countries = this.countriesForDisplay\r\n        const txtObj = this.txtObj(isEn)\r\n        if (!this.state || !currUser) return <LoadCycle width=\"30%\" height=\"30%\" top=\"30%\" />\r\n        return (\r\n            <section className=\"home-container main-layout pf\">\r\n                <div className={countryClass}>\r\n                    <small>{txtObj.about}</small>\r\n                    <small className=\"flex a-center j-center\">{currCountry}</small>\r\n                    <SwapHorizIcon style={{ display: isChooseCountryClicked ? 'none' : 'flex' }} onClick={() => {\r\n                        this.setState({ isChooseCountryClicked: true, countryClass: 'choose-country flex tac wide' })\r\n                        setTimeout(() => {\r\n                            this.setState({ cc: 'countries-div open' })\r\n                        }, 300);\r\n                        setTimeout(() => {\r\n                            this.setState({ dc: 'div shown', pc: 'p shown', countriesOpsClass: 'countries-options grid shown' })\r\n                        }, 600);\r\n                    }} />\r\n                    <div className={cc}>\r\n                        <header>\r\n                            <div className={dc} style={{ direction: isEn ? 'ltr' : 'rtl' }}>\r\n                                <input type=\"text\" placeholder={txtObj.placeholder} value={countryFilter} onChange={this.handleCountryChange} />\r\n                                <SearchRoundedIcon style={{ display: isEn ? 'block' : 'none' }} />\r\n                            </div>\r\n                            <p className={pc}>{currCountry}</p>\r\n                            <CloseRoundedIcon onClick={() => {\r\n                                this.setState({ countryClass: 'choose-country flex tac close', countriesOpsClass: 'countries-options grid', dc: 'div', pc: 'p' })\r\n                                setTimeout(() => {\r\n                                    this.setState({ countryClass: 'choose-country flex tac' })\r\n                                }, 500);\r\n                                setTimeout(() => {\r\n                                    this.setState({ isChooseCountryClicked: false })\r\n                                }, 1000);\r\n                            }} />\r\n                        </header>\r\n                        <div className={countriesOpsClass}>\r\n                            {countries.map((c, idx) => <div key={idx} style={{ color: !isOnDesktop ? currCountry === c ? 'black' : '' : currCountry === c ? 'white' : '' }} onClick={(ev) => this.onUpdateCountry(ev, c)}>\r\n                                <FiberManualRecordIcon />\r\n                                <p style={{ fontSize: c.length >= 10 ? 'smaller' : 'inherit' }}>{c}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {!isEditClicked && <div className=\"avatar flex j-evenly ma\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <p>{nickname}</p>\r\n                    <CreateOutlinedIcon onClick={() => this.setState({ isEditClicked: !isEditClicked })} />\r\n                </div>}\r\n                {isEditClicked && <div className=\"edit-name pa left-trans a-center\">\r\n                    <input type=\"text\" required placeholder={nickname} value={nickname} onChange={this.handleChange} autoFocus=\"on\" autoComplete=\"off\" className=\"tac\" />\r\n                    <CheckIcon onClick={() => {\r\n                        this.setState({ isEditClicked: nickname ? false : true }, () => {\r\n                            if (this.state.nickname) this.props.updateNickname(data, currUser, nickname)\r\n                        })\r\n\r\n                    }} />\r\n                </div>}\r\n\r\n                {isLoadingImage && <LoadCycle width=\"40%\" height=\"20%\" top=\"40%\" />}\r\n                {!isLoadingImage && <div className=\"image flex j-center pa left-trans\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <span className=\"uploadFComputer\"><PhotoCameraOutlinedIcon onClick={() => this.setState({ isSelectImgClicked: !isSelectImgClicked })} /></span>\r\n                    {!image.src && <img src={avatarSrc} alt=\"\" />}\r\n                    {image.src && <img src={currImg.src} alt=\"\" className=\"chosen-img\" style={{ backgroundColor: currImg.bgClr }} />}\r\n                    {currUser && <span className=\"first-letter-avatar flex a-center j-center\"><small>{nickname?.slice(0, 1).toUpperCase()}</small></span>}\r\n                </div>}\r\n\r\n                <section className=\"score-section flex j-between a-center pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>\r\n                    <span><StarsRoundedIcon /></span>\r\n                    <div className=\"score tac\">\r\n                        <p>{txtObj.points}</p>\r\n                        <p>{pointsObj?.fullPoints}</p>\r\n                    </div>\r\n                    <span><StarsRoundedIcon /></span>\r\n                </section>\r\n\r\n                <Link to=\"/play\"><div className=\"playing tac pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>{txtObj.play}</div></Link>\r\n\r\n                <section className={`imgs-section grid ${isSelectImgClicked ? 'open' : ''}`} style={{ display: !isChooseCountryClicked || isOnDesktop ? 'grid' : 'none' }}>\r\n                    <header className=\"flex j-between ma\">\r\n                        <p className=\"ma\">{txtObj.avatar}</p>\r\n                        <CloseRoundedIcon onClick={() => this.setState({ isSelectImgClicked: false, className: 'imgs-section grid' })} className=\"ma\" />\r\n                    </header>\r\n                    <div className=\"options grid pr\">\r\n                        {imgsUrl?.map((src, idx) => <div key={idx} onClick={(ev) => this.selectImg(ev, src)} style={{ backgroundColor: src.bgClr }}><img src={src.src} alt=\"\" /></div>)}\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    updateNickname,\r\n    updateUserImage,\r\n    updateCountry\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx",["185","186"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport GoogleLogin from 'react-google-login'\r\n\r\n//functions:\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { updateNickname, updateUserImage, createUser, checkExisting } from '../store/actions/userAction.js'\r\n\r\n//imgs:\r\nimport logoSrc from '../assets/imgs/bookLogo.png'\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\nimport google from '../assets/imgs/google.png'\r\n\r\nimport { userService } from '../services/userService.js';\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\n\r\nclass _SignUp extends Component {\r\n\r\n    state = {\r\n        isGuestClicked: false,\r\n        fields: {\r\n            nickname: '',\r\n            newName: '',\r\n            password: '',\r\n            newPass: '',\r\n        },\r\n        isSignShown: false,\r\n        isExist: false,\r\n        isCheckClicked: false,\r\n        lang: 'en'\r\n    }\r\n\r\n    responseGoogle = async (response) => {\r\n        const { data, history: { push } } = this.props\r\n        const { givenName, imageUrl } = response.profileObj\r\n        const pass = await userService.makeId(8)\r\n        this.setState({ fields: { ...this.state.fields, newName: givenName, newPass: pass } })\r\n        await this.props.createUser(data, { newName: givenName, newPass: pass, imageUrl })\r\n        const txt = this.txtForDisplay\r\n        Swal.fire({\r\n            title: txt.k,\r\n            text: pass,\r\n            confirmButtonText: txt.l,\r\n            confirmButtonColor: '#ff641a',\r\n            focusConfirm: false,\r\n            position: 'top-start',\r\n            allowOutsideClick: false\r\n        }).then(res => {\r\n            if (res.isConfirmed) {\r\n                console.log('confirmed');\r\n                push(`/${window.screen.width < 500 ? 'home' : 'about'}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadData()\r\n        const currUser = storageService.load('currUser')\r\n        let lang = currUser !== null ? currUser?.game?.lang : 'English'\r\n        this.setState({ lang })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        let value = target.value\r\n        let field = target.name\r\n        let copyFields = { ...this.state.fields, [field]: value }\r\n        this.setState({ fields: copyFields })\r\n    }\r\n\r\n    checkExisting = async () => {\r\n        let { nickname, password } = this.state.fields\r\n        let isExist = await this.props.checkExisting(this.props.data, { nickname, password })\r\n        this.setState({ isExist, isGuestClicked: false, isCheckClicked: true }, () => {\r\n            if (!this.state.isExist) this.doSwal()\r\n            else this.props.history.push(`/${window.screen.width < 500 ? 'home' : 'about'}`)\r\n        })\r\n    }\r\n\r\n    doSwal = () => {\r\n        const txt = this.txtForDisplay\r\n        Swal.fire({\r\n            title: txt.h,\r\n            showCancelButton: true,\r\n            cancelButtonColor: '',\r\n            cancelButtonText: txt.n,\r\n            confirmButtonText: txt.i,\r\n            confirmButtonColor: window.screen.height < 1000 ? '#ff5722' : '#ff7629',\r\n            focusConfirm: false,\r\n            allowOutsideClick: false,\r\n            reverseButtons: true,\r\n        }).then(res => {\r\n            if (res.isConfirmed) {\r\n                this.setState({ isSignShown: true, isGuestClicked: true })\r\n            }\r\n        })\r\n    }\r\n\r\n    createUser = async () => {\r\n        const { data, history: { push } } = this.props\r\n        let { newName, newPass } = this.state.fields\r\n        if (newName && newPass) {\r\n            await this.props.createUser(data, { newName, newPass })\r\n            push(`/${window.screen.width < 500 ? 'home' : 'about'}`)\r\n        }\r\n    }\r\n\r\n    get txtForDisplay() {\r\n        const { lang } = this.state\r\n        return lang === 'English' ? {\r\n            a: 'Login',\r\n            b: 'Username',\r\n            c: 'Get In',\r\n            d: 'Choose A username',\r\n            e: 'Oops, Seems You Need To Signup',\r\n            f: 'Password',\r\n            g: 'signup',\r\n            h: 'Seems you need to sign up',\r\n            i: 'Sign Up',\r\n            j: 'Hello! Please log in to start playing, or sign up and create a new user',\r\n            k: 'Your Password is:',\r\n            l: 'Ok, Got It',\r\n            m: 'Choose A Password',\r\n            n: 'Back To Fix',\r\n            o: 'Sign Up With Google',\r\n            p: \"Let's Start\",\r\n            q: 'Or'\r\n        } : {\r\n            a: 'היכנס/י',\r\n            b: 'שם משתמש',\r\n            c: 'היכנס/י',\r\n            d: 'בחר/י שם משתמש',\r\n            e: 'נראה שיש צורך להירשם',\r\n            f: 'סיסמה',\r\n            g: 'הירשם/י',\r\n            h: 'נראה שיש צורך להירשם',\r\n            i: 'הירשם/י',\r\n            j: 'היי! היכנס/י כדי להתחיל לשחק, או הירשם/י ופתח/י משתמש חדש',\r\n            k: 'הסיסמה שלך היא',\r\n            l: 'בסדר הבנתי',\r\n            m: 'בחר/י סיסמה',\r\n            n: 'חזרה',\r\n            o: 'היכנס/י באמצעות גוגל',\r\n            p: 'בוא/י נתחיל',\r\n            q: 'או'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isGuestClicked, nickname, password, isExist, isCheckClicked, newName, newPass, isSignShown, lang } = this.state\r\n        const txt = this.txtForDisplay\r\n        const isEn = lang === 'English' ? true : false\r\n        return (\r\n            <section className=\"sign-up tac page\" style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }}>\r\n\r\n                <div className=\"top\">\r\n                    <p>welcome to trinius</p>\r\n                    <small>the game that will make you a genius</small>\r\n                    <img src={logoSrc} alt=\"\" />\r\n                </div>\r\n                <img src={logoSrc} alt=\"\" className=\"logo flex ma\" />\r\n                {!isGuestClicked && <div className=\"signs-options\">\r\n                    <section className=\"info\">\r\n                        <p>{txt.j}</p>\r\n                    </section>\r\n                    <div className=\"enter-guest pa\" style={{ color: 'black', width: '100%', fontSize: 'larger' }} onClick={() => this.setState({ isGuestClicked: !isGuestClicked })}>{txt.p}</div>\r\n                </div>}\r\n\r\n                {isGuestClicked && <section className=\"forms-section pa left-trans\">\r\n                    {!isSignShown && <div>\r\n                        <p>{txt.a}</p>\r\n                        <input style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }} type=\"text\" autoFocus placeholder={txt.b} name=\"nickname\" autoComplete=\"off\" onChange={this.handleChange} value={nickname} className=\"tac\" required />\r\n                        <input style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }} type=\"password\" placeholder={txt.f} name=\"password\" value={password} onChange={this.handleChange} autoComplete=\"off\" className=\"tac\" required />\r\n                        <span onClick={(ev) => this.checkExisting(ev)}>{txt.c}</span>\r\n                    </div>}\r\n                    {isSignShown && <div>\r\n                        <p>{txt.i}</p>\r\n                        <GoogleLogin\r\n                            clientId=\"192799378072-sv10o18kvorg1bb9paptm1drkffvbnie.apps.googleusercontent.com\"\r\n                            buttonText=\"\"\r\n                            onSuccess={this.responseGoogle}\r\n                            onFailure={this.responseGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            render={renderProps => (\r\n                                <div style={{ color: 'black', fontWeight: 'normal' }} className=\"enter-google flex\" onClick={renderProps.onClick} disabled={renderProps.disabled}>\r\n                                    <img className=\"google-img pa\" src={google} alt=\"\" />\r\n                                    <p>{txt.o}</p>\r\n                                    </div>\r\n                            )}\r\n                        />\r\n                        <h3>{txt.q}</h3>\r\n                        <div className=\"opts\">\r\n                            <input style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }} type=\"text\" autoFocus placeholder={txt.d} name=\"newName\" autoComplete=\"off\" onChange={this.handleChange} value={newName} className=\"tac\" required />\r\n                            <input style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }} type=\"password\" placeholder={txt.m} name=\"newPass\" value={newPass} onChange={this.handleChange} autoComplete=\"off\" className=\"tac\" required />\r\n                            <div className=\"g-in pr\" onClick={this.createUser}>{txt.c}</div>\r\n                        </div>\r\n                    </div>}\r\n                </section>}\r\n\r\n\r\n                <div className=\"backImgs\">\r\n                    <img src={finish} alt=\"\" />\r\n                    <img src={clock} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                    <img src={round} alt=\"\" />\r\n                </div>\r\n\r\n            </section >\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    updateNickname,\r\n    updateUserImage,\r\n    createUser,\r\n    checkExisting\r\n}\r\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp)\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js",["187"],"import { httpService } from './httpService.js'\r\nimport { storageService } from './session-storage.js'\r\n\r\nexport const userService = {\r\n    updateUser,\r\n    updateNickname,\r\n    updateImgSrc,\r\n    updatePointsObj,\r\n    addQuestion,\r\n    checkExisting,\r\n    createUser,\r\n    resetPoints,\r\n    makeId\r\n}\r\n\r\nasync function updateUser(data, user) {\r\n    try {\r\n        const userIdx = data.users.findIndex(u => u._id === user._id)\r\n        data.users[userIdx] = user\r\n        const updatedData = { ...data }\r\n        httpService.put('/trinius/' + updatedData._id, updatedData)\r\n        storageService.save('currUser', user)\r\n        var c = storageService.load('currUser')\r\n        console.log(c);\r\n    } catch (err) {\r\n        console.log('err in userService in updateUser:', err);\r\n    }\r\n}\r\n\r\nasync function updateNickname(user, nickname) {\r\n    try {\r\n        const updatedUser = { ...user, nickname }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in updateNickname:', err);\r\n    }\r\n}\r\n\r\n\r\nasync function updateImgSrc(user, image) {\r\n    try {\r\n        const updatedUser = { ...user, image }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in setUserImage:', err);\r\n    }\r\n}\r\n\r\nasync function updatePointsObj(user, obj) {\r\n    try {\r\n        const updatedUser = { ...user, pointsObj: { ...obj } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in updatePointsObj:', err);\r\n    }\r\n}\r\n\r\nasync function addQuestion(user, obj) {\r\n    try {\r\n        var { objectsArray } = user\r\n        if (objectsArray.length) objectsArray.push(obj)\r\n        else objectsArray = [obj]\r\n        const updatedUser = { ...user, objectsArray }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in itemService in addQuestion:', err);\r\n    }\r\n}\r\n\r\nasync function checkExisting(data, userLittleObj) {\r\n    try {\r\n        const { nickname, password } = userLittleObj\r\n        const { users } = data\r\n        var index = users.findIndex(user => user.password === password && user.nickname === nickname)\r\n        if (index >= 0) {\r\n            storageService.clear()\r\n            storageService.save('currUser', data.users[index])\r\n        }\r\n        return index\r\n    } catch (err) {\r\n        console.log('err in userService in checkExisting:', err);\r\n    }\r\n}\r\n\r\nasync function createUser(data, newUserLittleObj) {\r\n    const { newName, newPass } = newUserLittleObj\r\n    try {\r\n        const newUser = {\r\n            _id: await makeId(),\r\n            nickname: newName,\r\n            password: newPass,\r\n            pointsObj: {\r\n                categories: {\r\n                    nature: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    geography: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    animals: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    personalities: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    movies: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    medicine: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    food: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    sports: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    music: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    science: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    technology: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    }\r\n                },\r\n                countries: {\r\n                    Argentina: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Australia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Austria: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Belgium: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Brazil: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Canada: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    China: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Colombia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Denmark: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    England: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Ethiopia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Finland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    France: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Germany: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    India: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Israel: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Italy: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Japan: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Mexico: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Morocco: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Philippines: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Poland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Portugal: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Romania: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Russia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Spain: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Sweden: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Switzerland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Thailand: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Ukraine: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    USA: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    }\r\n                },\r\n                fullPoints: 10\r\n\r\n            },\r\n            image: {\r\n                src: newUserLittleObj.imageUrl ? newUserLittleObj.imageUrl : '/static/media/user.579e0088.png',\r\n                bgClr: '#ff955a'\r\n            },\r\n            objectsArray: [],\r\n            game: {\r\n                soundObj: {\r\n                    soundStatus: false,\r\n                    sound: {\r\n                        s: \"/static/media/01.8cf4fc9e.mp3\",\r\n                        n: \"Art of silence\",\r\n                        isPlaying: false\r\n                    }\r\n                },\r\n                timeObj: {\r\n                    timeStatus: false,\r\n                    time: 60\r\n                },\r\n                category: {\r\n                    name: \"PERSONALITIES\",\r\n                    src: \"/static/media/personalities-c.8d940b01.png\"\r\n                },\r\n                country: \"USA\",\r\n                lang: \"English\",\r\n                level: {\r\n                    n: \"E\",\r\n                    c: \"#ff9800\"\r\n                },\r\n                roundIdx: 0,\r\n                useQ: false\r\n            }\r\n        }\r\n        storageService.clear()\r\n        console.log('newUser:', newUser)\r\n        storageService.save('currUser', newUser)\r\n        const newUsers = [...data.users, newUser]\r\n        const updatedData = { ...data, users: newUsers }\r\n        return updatedData\r\n    } catch (err) {\r\n        console.log('err in userService in createUser:', err);\r\n    }\r\n}\r\n\r\nfunction resetPoints(data, currUser) {\r\n    const { users } = data\r\n    var index = users.findIndex(user => user._id === currUser._id)\r\n    var { categories, countries } = currUser\r\n    var tempObj = { ...categories, ...countries }\r\n\r\n    var updatedObj = {\r\n        categories: {\r\n            nature: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            geography: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            animals: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            personalities: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            movies: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            medicine: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            food: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            sports: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            music: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            science: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            technology: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            }\r\n        },\r\n        countries: {\r\n            Argentina: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Australia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Austria: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Belgium: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Brazil: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Canada: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            China: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Colombia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Denmark: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            England: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Ethiopia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Finland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            France: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Germany: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            India: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Israel: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Italy: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Japan: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Mexico: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Morocco: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Philippines: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Poland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Portugal: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Romania: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Russia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Spain: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Sweden: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Switzerland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Thailand: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Ukraine: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            USA: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            }\r\n        },\r\n        fullPoints: 10\r\n\r\n    }\r\n    users[index].pointsObj = updatedObj\r\n    const updatedData = { ...data, users }\r\n    return updatedData\r\n}\r\n\r\nasync function makeId(length = 10) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx",["188","189","190","191"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Howl } from 'howler';\r\nimport i18n from \"../services/i18next\";\r\n\r\n//components:\r\nimport { Category } from '../cmps/Category';\r\nimport { ToggleWrapper } from '../cmps/ToggleWrapper';\r\nimport { Logout } from '../cmps/Logout';\r\n\r\n//functions:\r\nimport { updateSoundStatus, updateSound, updateLang, updateTime, updateTimeStatus, updateLevel, updateUseQStatus, updateCountry } from '../store/actions/gameAction.js'\r\nimport { logout } from '../store/actions/userAction.js'\r\nimport { loadData } from '../store/actions/dataAction.js';\r\nimport { gameService } from '../services/gameService';\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\n//icons:\r\nimport VolumeUpRoundedIcon from '@material-ui/icons/VolumeUpRounded';\r\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\r\nimport AccessAlarmRoundedIcon from '@material-ui/icons/AccessAlarmRounded';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\r\nimport SignalCellularNoSimOutlinedIcon from '@material-ui/icons/SignalCellularNoSimOutlined';\r\nimport BarChartRoundedIcon from '@material-ui/icons/BarChartRounded';\r\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\n\r\n//tunes:\r\n//piano-covers:\r\nimport p01 from '../music/piano/01.mp3'\r\nimport p02 from '../music/piano/02.mp3'\r\nimport p03 from '../music/piano/03.mp3'\r\nimport p04 from '../music/piano/04.mp3'\r\nimport p05 from '../music/piano/05.mp3'\r\nimport p06 from '../music/piano/06.mp3'\r\nimport p07 from '../music/piano/07.mp3'\r\nimport p08 from '../music/piano/08.mp3'\r\nimport p09 from '../music/piano/09.mp3'\r\nimport p10 from '../music/piano/10.mp3'\r\nimport p11 from '../music/piano/11.mp3'\r\nimport p12 from '../music/piano/12.mp3'\r\nimport p13 from '../music/piano/13.mp3'\r\nimport p14 from '../music/piano/14.mp3'\r\nimport p15 from '../music/piano/15.mp3'\r\nimport p16 from '../music/piano/16.mp3'\r\nimport p17 from '../music/piano/17.mp3'\r\nimport p18 from '../music/piano/18.mp3'\r\nimport p19 from '../music/piano/19.mp3'\r\n\r\n//songs:\r\nimport s01 from '../music/songs/01.mp3'\r\nimport s02 from '../music/songs/02.mp3'\r\nimport s03 from '../music/songs/03.mp3'\r\nimport s04 from '../music/songs/04.mp3'\r\nimport s05 from '../music/songs/05.mp3'\r\nimport s06 from '../music/songs/06.mp3'\r\nimport s07 from '../music/songs/07.mp3'\r\nimport s08 from '../music/songs/08.mp3'\r\nimport s09 from '../music/songs/09.mp3'\r\nimport s10 from '../music/songs/10.mp3'\r\nimport s11 from '../music/songs/11.mp3'\r\nimport s12 from '../music/songs/12.mp3'\r\n\r\n\r\nconst tunes = [\r\n    {\r\n        title: 'covers',\r\n        tunes: [\r\n            { s: p01, n: 'Art of silence', isPlaying: false },\r\n            { s: p02, n: 'friends - aura dione', isPlaying: false },\r\n            { s: p03, n: 'bach - aria variata', isPlaying: false },\r\n            { s: p04, n: 'the shadow of your smile', isPlaying: false },\r\n            { s: p05, n: 'believer', isPlaying: false },\r\n            { s: p06, n: 'everyone - monplaisir', isPlaying: false },\r\n            { s: p07, n: 'attention - charlie puth', isPlaying: false },\r\n            { s: p08, n: 'don\\'t stop me now - queen', isPlaying: false },\r\n            { s: p09, n: 'chandelier - sia', isPlaying: false },\r\n            { s: p10, n: 'how long - charlie puth', isPlaying: false },\r\n            { s: p11, n: 'demons - imagine dragons', isPlaying: false },\r\n            { s: p12, n: 'despacito', isPlaying: false },\r\n            { s: p13, n: 'shape of you', isPlaying: false },\r\n            { s: p14, n: 'the hills - the weekend', isPlaying: false },\r\n            { s: p15, n: 'dance monkey - tones and i', isPlaying: false },\r\n            { s: p16, n: 'in dreams - scott buckley', isPlaying: false },\r\n            { s: p17, n: 'can\\'t stop my feet', isPlaying: false },\r\n            { s: p18, n: 'empowered ending', isPlaying: false },\r\n            { s: p19, n: 'atmosphere', isPlaying: false },\r\n        ]\r\n    },\r\n    {\r\n        title: 'songs',\r\n        tunes: [\r\n            { s: s01, n: 'faded - alan walker', isPlaying: false },\r\n            { s: s02, n: 'thank u, next - ariana grande', isPlaying: false },\r\n            { s: s03, n: 'hallo - beyonce', isPlaying: false },\r\n            { s: s04, n: 'bad guy - biilie eilish', isPlaying: false },\r\n            { s: s05, n: 'lovely - billie eilish', isPlaying: false },\r\n            { s: s06, n: 'my heart will go on - celine dion', isPlaying: false },\r\n            { s: s07, n: 'perfect - ed sheeran', isPlaying: false },\r\n            { s: s08, n: 'photograph - ed sheeran', isPlaying: false },\r\n            { s: s09, n: 'story of my life - one direction', isPlaying: false },\r\n            { s: s10, n: 'what makes you beautiful - one direction', isPlaying: false },\r\n            { s: s11, n: 'you & i - one direction', isPlaying: false },\r\n            { s: s12, n: 'fade - tony tucker', isPlaying: false },\r\n        ]\r\n    }\r\n]\r\nvar music = {\r\n    overworld: new Howl({\r\n        src: [p01]\r\n    })\r\n}\r\nconst levels = [\r\n    { n: 'E', c: '#ff9800' },\r\n    { n: 'M', c: '#FF5733' },\r\n    { n: 'H', c: '#E92337' }\r\n]\r\nconst timeOps = [60, 90, 120, 240]\r\nconst languages = ['English', 'עברית']\r\n\r\nexport const Settings = ({ history, children, isOnDesktop }) => {\r\n\r\n    const { data } = useSelector(state => state.dataModule)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [currUser, setCurrUser] = useState({})\r\n    const [isSoundOn, setIsSoundOn] = useState(false)\r\n    const [useQStatus, setUseQStatus] = useState('')\r\n    const [isTimeLevelOn, setIsTimeLevelOn] = useState(false)\r\n    const [selectedTime, setSelectedTime] = useState(null)\r\n    const [currCountry, setCurrCountry] = useState('')\r\n    const [currLang, setCurrLang] = useState('')\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [category, setCategory] = useState(null)\r\n    const [lang, setLang] = useState(null)\r\n    const [selectedLevel, setSelectedLevel] = useState(null)\r\n    const [isCategoryOpen, setIsCategoryOpen] = useState(false)\r\n    const [tunesArr, setTunesArr] = useState(tunes)\r\n\r\n    var lngs = gameService.setSettLngs()\r\n\r\n    useEffect(() => {\r\n        setLang(currUser?.game?.lang)\r\n        setCategory(currUser?.game?.category)\r\n    }, [currUser])\r\n\r\n    useEffect(async () => {\r\n        const currUser = storageService.load('currUser')\r\n        await dispatch(loadData())\r\n\r\n        if (!currUser) return\r\n        const { soundObj, timeObj, lang, level, useQ, country } = currUser?.game\r\n\r\n        if (!currUser?.nickname) history?.push(\"/\")\r\n\r\n        setIsSoundOn(soundObj?.soundStatus)\r\n        setUseQStatus(useQ)\r\n        setIsTimeLevelOn(timeObj?.timeStatus)\r\n        setCurrCountry(country)\r\n        setCurrLang(lang)\r\n        setCurrUser({ ...currUser })\r\n\r\n        if (!country) await dispatch(updateCountry(data, currUser, lang === 'English' ? 'Brazil' : 'ברזיל'))\r\n\r\n        if (!soundObj?.soundStatus) {\r\n            setIsSoundOn(false)\r\n            setSelectedSound(tunesArr[0].tunes[0])\r\n            await dispatch(updateSound(data, currUser, tunesArr[0].tunes[0]))\r\n            await dispatch(updateSoundStatus(data, currUser, isSoundOn))\r\n        } else setSelectedSound(soundObj.sound)\r\n\r\n        if (!timeObj?.time) {\r\n            setIsTimeLevelOn(false)\r\n            setSelectedTime(60)\r\n            await dispatch(updateTime(data, currUser, 60))\r\n            await dispatch(updateTimeStatus(data, currUser, isTimeLevelOn))\r\n        } else setSelectedTime(timeObj.time)\r\n\r\n        if (!level) {\r\n            setSelectedLevel(Object.values(levels)[0])\r\n            await dispatch(dispatch(updateLevel(data, currUser, selectedLevel)))\r\n        } else setSelectedLevel(level)\r\n\r\n        return () => {\r\n            music.overworld.stop()\r\n            falseAll()\r\n        }\r\n    }, [])\r\n\r\n    const onUpdateLang = async ({ target }) => {\r\n        if (currLang === target.value) return\r\n        else {\r\n            i18n.changeLanguage(this.lngForChange(target.value))\r\n            const { country, lang } = currUser?.game\r\n            setCurrLang(target.value, async () => {\r\n                var currC = gameService.tranCountry(target.value, country)\r\n                await dispatch(updateLang(data, currUser, currLang, currC))\r\n            })\r\n        }\r\n    }\r\n    const lngForChange = (lng) => lng === 'English' ? 'en' : 'he'\r\n    const onCloseCategory = () => setIsCategoryOpen(false)\r\n\r\n    const onUpdate = async (key, value) => {\r\n        const currUser = storageService.load('currUser')\r\n        switch (key) {\r\n            case 'soundStatus':\r\n                setIsSoundOn(value)\r\n                await dispatch(updateSoundStatus(data, currUser, value))\r\n                break\r\n            case 'sound':\r\n                setSelectedSound(value)\r\n                await dispatch(updateSound(data, currUser, value))\r\n                break\r\n            case 'timeStatus':\r\n                setIsTimeLevelOn(value)\r\n                await dispatch(updateTimeStatus(data, currUser, value))\r\n                break\r\n            case 'time':\r\n                setSelectedTime(value)\r\n                await dispatch(updateTime(data, currUser, value))\r\n                break\r\n            case 'level':\r\n                setSelectedLevel({ ...value })\r\n                await dispatch(updateLevel(data, currUser, value))\r\n                break\r\n            case 'useQ':\r\n                setUseQStatus(value)\r\n                await dispatch(updateUseQStatus(data, currUser, value))\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const soundPlay = (ev, src, value) => {\r\n        ev.stopPropagation()\r\n        music.overworld.stop()\r\n        checkCurrSound(src, value)\r\n        music = { overworld: new Howl({ src }) }\r\n        if (!music.overworld.playing()) music.overworld.play()\r\n    }\r\n    const checkCurrSound = (src, value) => {\r\n        var fullTunesArr = falseAll()\r\n        fullTunesArr.forEach(arr => arr.tunes.forEach(currSound => {\r\n            if (currSound.s === src) currSound.isPlaying = value\r\n        }))\r\n        setTunesArr(fullTunesArr)\r\n    }\r\n    const falseAll = () => {\r\n        var fullTunesArr = tunesArr.slice()\r\n        fullTunesArr.forEach(arr => arr.tunes.forEach(t => t.isPlaying = false))\r\n        console.log('fullTunesArr', fullTunesArr);\r\n        return fullTunesArr\r\n    }\r\n    const soundStop = (ev, src, value) => {\r\n        ev.stopPropagation()\r\n        checkCurrSound(src, value)\r\n        music.overworld.stop()\r\n    }\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"settings left-trans\">\r\n                <span className=\"span-children\">{children}</span>\r\n\r\n                <div className=\"categories\">\r\n                    <div>\r\n                        <span><ClassIcon /></span>\r\n                        <p>{lngs[\"sett-c\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <div className=\"to-category flex j-evenly a-center\">\r\n                        <p className=\"pa a-center flex ttc\">{category?.name ? gameService.getCForDisplay(true, lang, category?.name) : <SignalCellularNoSimOutlinedIcon />}</p>\r\n                        <DoubleArrowRoundedIcon onClick={() => setIsCategoryOpen(true)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"levels\">\r\n                    <div>\r\n                        <span><BarChartRoundedIcon /></span>\r\n                        <p>{lngs[\"sett-l\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <div className=\"level-select flex j-between\">\r\n                        {levels.map((l, idx) => <div key={idx} onClick={() => onUpdate('level', l)} style={{ border: selectedLevel?.n === l.n && !isOnDesktop ? '2px solid black' : '', backgroundColor: l.c }}>\r\n                            <p style={{ color: selectedLevel?.n === l.n ? 'black' : 'white' }}>{l.n}</p>\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: isSoundOn ? 0 : '3%', borderRadius: isSoundOn ? '5px 5px 0 0' : '5px' }}>\r\n                    <div>\r\n                        <span><VolumeUpRoundedIcon /></span>\r\n                        <p>{lngs[\"sett-s\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <ToggleWrapper obj={{ value: isSoundOn, key: 'soundStatus' }} onUpdate={onUpdate} />\r\n                </div>\r\n                <div className={`sound-select ${isSoundOn ? 'open' : ''}`}>\r\n                    <p className=\"selected-sound pa tas ma\">{selectedSound?.n}</p>\r\n                    {tunesArr.map((arr, idx) => <div key={idx}>\r\n                        <p className=\"piano-p tac\">{lngs[`sett-p-${arr.title}`][lngForChange(currLang)]}</p>\r\n                        <div>\r\n                            {arr.tunes.map((p, idx) => <div className=\"tune\" key={idx} onClick={() => onUpdate('sound', p)} style={{ backgroundColor: selectedSound?.n === p.n ? '#ff9800' : '#e8eaed' }}>\r\n                                {!p.isPlaying && <PlayCircleOutlineIcon onClick={(ev) => soundPlay(ev, p.s, true)} />}\r\n                                {p.isPlaying && <PauseCircleOutlineIcon onClick={(ev) => soundStop(ev, p.s, false)} />}\r\n                                <p>{p.n}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n\r\n                <div style={{ marginBottom: isTimeLevelOn ? 0 : '3%', borderRadius: isTimeLevelOn ? '5px 5px 0 0' : '5px' }}>\r\n                    <div>\r\n                        <span><AccessAlarmRoundedIcon /></span>\r\n                        <p>{lngs[\"sett-t\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <ToggleWrapper obj={{ value: isTimeLevelOn, key: 'timeStatus' }} onUpdate={onUpdate} />\r\n                </div>\r\n                <div className={`time-select flex j-between ${isTimeLevelOn ? 'open' : ''}`}>\r\n                    {timeOps.map((t, idx) => <div key={idx} onClick={() => onUpdate('time', t)} style={{ backgroundColor: selectedTime === t ? '#ff9800' : !isOnDesktop ? 'white' : '#151515', boxShadow: selectedTime === t ? '' : '0px 7px 0 #80808014' }}>\r\n                        <p>{t}</p>\r\n                    </div>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <div>\r\n                        <span><LanguageRoundedIcon /></span>\r\n                        <p>{lngs[\"sett-lng\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <select name=\"languages\" onChange={onUpdateLang}>\r\n                        {languages.map((l, idx) => <option key={idx} style={{ backgroundColor: currLang === l ? 'orange' : 'white' }} value={l}>{l}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <div>\r\n                        <span><QuestionAnswerOutlinedIcon /></span>\r\n                        <p>{lngs[\"sett-useQ\"][lngForChange(currLang)]}</p>\r\n                    </div>\r\n                    <ToggleWrapper obj={{ value: useQStatus, key: 'useQ' }} onUpdate={onUpdate} />\r\n                </div>\r\n\r\n                <Logout data={data} logout={dispatch(logout)} history={history} />\r\n\r\n            </section>\r\n            <Category data={data} onClose={onCloseCategory} isOnDesktop={isOnDesktop} className={`category-section ${isCategoryOpen ? 'open' : ''}`} />\r\n        </React.Fragment >\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js",["192","193"],"import { httpService } from \"./httpService\"\r\n\r\nimport nature from '../assets/imgs/categories/nature-c.png'\r\nimport animals from '../assets/imgs/categories/animals-c.png'\r\nimport food from '../assets/imgs/categories/food-c.png'\r\nimport geography from '../assets/imgs/categories/geography-c.png'\r\nimport medicine from '../assets/imgs/categories/medicine-c.png'\r\nimport movies from '../assets/imgs/categories/movies-c.png'\r\nimport personalities from '../assets/imgs/categories/personalities-c.png'\r\nimport science from '../assets/imgs/categories/science-c.png'\r\nimport music from '../assets/imgs/categories/music-c.png'\r\nimport technology from '../assets/imgs/categories/technology-c.png'\r\nimport sports from '../assets/imgs/categories/sports-c.png'\r\n\r\n\r\nexport const gameService = {\r\n    // loadGame,\r\n    updateCategory,\r\n    updateCountry,\r\n    updateSoundStatus,\r\n    updateSound,\r\n    updateLang,\r\n    updateTime,\r\n    updateTimeStatus,\r\n    updateLevel,\r\n    updateRoundIdx,\r\n    updateUseQStatus,\r\n    updateGame,\r\n    getCForDisplay,\r\n    tranCountry,\r\n    setSettLngs,\r\n    setAddingTxt,\r\n    transToEn,\r\n    getNextCategory\r\n}\r\n\r\nasync function updateGame(data, game) {\r\n    try {\r\n        const updatedData = { ...data, game }\r\n        httpService.put('/trinius/' + updatedData._id, updatedData)\r\n    } catch (err) {\r\n        console.log('err in gameService in updateGame:', err);\r\n    }\r\n}\r\n\r\n\r\nasync function updateCategory(user, category) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, category } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateCategory:', err);\r\n    }\r\n}\r\n\r\nasync function updateCountry(user, country) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, country } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateCategory:', err);\r\n    }\r\n}\r\n\r\nasync function updateSoundStatus(user, status) {\r\n    try {\r\n\r\n        const updatedUser = { ...user, game: { ...user.game, soundObj: { ...user.game.soundObj, soundStatus: status } } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameAction in updateSoundStatus:', err);\r\n    }\r\n}\r\n\r\nasync function updateSound(user, currSound) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, soundObj: { ...user.game.soundObj, sound: { ...currSound } } } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateSound:', err);\r\n    }\r\n}\r\n\r\nasync function updateLang(user, lang, country) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, lang, country } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateLang:', err);\r\n    }\r\n}\r\n\r\nasync function updateTimeStatus(user, status) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, timeObj: { ...user.game.timeObj, timeStatus: status } } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateTimeStatus:', err);\r\n    }\r\n}\r\n\r\nasync function updateTime(user, time) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, timeObj: { ...user.game.timeObj, time } } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateTime:', err);\r\n    }\r\n}\r\n\r\nasync function updateLevel(user, level) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, level } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateLevel:', err);\r\n    }\r\n}\r\n\r\nasync function updateRoundIdx(user, idx) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, roundIdx: idx } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateRoundIdx:', err);\r\n    }\r\n}\r\n\r\nasync function updateUseQStatus(user, status) {\r\n    try {\r\n        const updatedUser = { ...user, game: { ...user.game, useQ: status } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in gameService in updateUseQStatus:', err);\r\n    }\r\n}\r\n\r\nfunction getCForDisplay(val, lang, c) {\r\n    if (lang === 'English') {\r\n        if (val) return c.toLowerCase()\r\n        else return c\r\n    }\r\n    else\r\n        if (val)\r\n            switch (c.toLowerCase()) {\r\n                case 'nature': return 'טבע'\r\n                case 'geography': return 'גיאוגרפיה'\r\n                case 'animals': return 'בעלי חיים'\r\n                case 'personalities': return 'אנשים'\r\n                case 'movies': return 'סרטים'\r\n                case 'medicine': return 'רפואה'\r\n                case 'food': return 'אוכל'\r\n                case 'sports': return 'ספורט'\r\n                case 'music': return 'מוזיקה'\r\n                case 'science': return 'מדע'\r\n                case 'technology': return 'טכנולוגיה'\r\n            }\r\n        else {\r\n\r\n            switch (c.slice(0, 1).toUpperCase() + c.slice(1)) {\r\n                case 'Argentina': return 'ארגנטינה'\r\n                case 'Australia': return 'אוסטרליה'\r\n                case 'Austria': return 'אוסטריה'\r\n                case 'Belgium': return 'בלגיה'\r\n                case 'Brazil': return 'ברזיל'\r\n                case 'Canada': return 'קנדה'\r\n                case 'China': return 'סין'\r\n                case 'Colombia': return 'קולומביה'\r\n                case 'Denmark': return 'דנמרק'\r\n                case 'England': return 'אנגליה'\r\n                case 'Ethiopia': return 'אתיופיה'\r\n                case 'Finland': return 'פינלנד'\r\n                case 'France': return 'צרפת'\r\n                case 'Germany': return 'גרמניה'\r\n                case 'India': return 'הודו'\r\n                case 'Israel': return 'ישראל'\r\n                case 'Italy': return 'איטליה'\r\n                case 'Japan': return 'יפן'\r\n                case 'Mexico': return 'מקסיקו'\r\n                case 'Morocco': return 'מרוקו'\r\n                case 'Philippines': return 'פיליפינים'\r\n                case 'Poland': return 'פולין'\r\n                case 'Portugal': return 'פורטוגל'\r\n                case 'Romania': return 'רומניה'\r\n                case 'Russia': return 'רוסיה'\r\n                case 'Spain': return 'ספרד'\r\n                case 'Sweden': return 'שוודיה'\r\n                case 'Switzerland': return 'שווייץ'\r\n                case 'Thailand': return 'תאילנד'\r\n                case 'Ukraine': return 'אוקראינה'\r\n                case 'USA': return 'ארצות הברית'\r\n            }\r\n        }\r\n}\r\n\r\nfunction transToEn(isCategoryObject, currCategory, currCountry) {\r\n    var categoriesNamesEnglish = ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology']\r\n    var categoriesNamesHebrew = ['טבע', 'גיאוגרפיה', 'בעלי חיים', 'אנשים', 'סרטים', 'רפואה', 'אוכל', 'ספורט', 'מוזיקה', 'מדע', 'טכנולוגיה']\r\n    if (isCategoryObject) return categoriesNamesEnglish[categoriesNamesHebrew.findIndex(c => c === currCategory)]\r\n    else return tranCountry('English', currCountry)\r\n}\r\n\r\nfunction tranCountry(lang, country) {\r\n    console.log(country);\r\n    var arr = [\r\n        ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA'],\r\n        ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'דנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית']\r\n    ]\r\n    var currCountry = arr[lang === 'English' ? 0 : 1][(arr[lang === 'English' ? 1 : 0]).findIndex(c => c === country)]\r\n    return currCountry\r\n}\r\n\r\nfunction setSettLngs() {\r\n    return {\r\n        \"sett-c\": {\r\n            en: 'Category',\r\n            he: 'קטגוריה'\r\n        },\r\n        \"sett-l\": {\r\n            en: 'Level',\r\n            he: 'רמה'\r\n        },\r\n        \"sett-s\": {\r\n            en: 'Sound',\r\n            he: 'מוזיקה'\r\n        },\r\n        \"sett-p-covers\": {\r\n            en: 'Piano Covers',\r\n            he: \"קאברים (פסנתר)\",\r\n        },\r\n        \"sett-p-songs\": {\r\n            en: 'Songs',\r\n            he: \"שירים\",\r\n        },\r\n        \"sett-t\": {\r\n            en: 'Round Time',\r\n            he: \"משך סיבוב\"\r\n        },\r\n        \"sett-lng\": {\r\n            en: 'Language',\r\n            he: \"שפה\"\r\n        },\r\n        \"sett-useQ\": {\r\n            en: 'Use Your Questions',\r\n            he: \"שימוש בשאלות שנוספו\"\r\n        }\r\n    }\r\n}\r\n\r\nfunction setAddingTxt(lng) {\r\n    return lng === 'English' ? {\r\n        add_mult: \"Multiple Question\",\r\n        add_tf: \"True/False Question\",\r\n        add_desc: \"In this type you are not supposed to ask a question, but to establish a statement whether it's correct or not enjoy!\",\r\n        add_or: \"or\",\r\n        add_the: \"your-\",\r\n        add_finish: \"Finish\",\r\n        add_com: \"Please complete your\",\r\n        add_choose_l: \"Choose Level\",\r\n        add_done: \"Done\",\r\n        add_check: \"Checking your\",\r\n        add_check_II: \"Just a second...\",\r\n        add_sorry: \"Sorry, It seems your\",\r\n        add_sorry_II: \"is inappropriate...\",\r\n        add_fix: \"Fix It\",\r\n        add_congrats: \"Congratulation!\",\r\n        add_congrats_II: \"Your\",\r\n        add_congrats_III: \"added successfully\"\r\n    } : {\r\n        add_mult: \"רב ברירתי\",\r\n        add_tf: \"נכון/לא נכון\",\r\n        add_desc: \"בסוג השאלות הזה אין צורך לשאול שאלה, אלא לקבוע עובדה ולהחליט אם היא נכונה או לא. תהנו\",\r\n        add_or: \"או\",\r\n        add_the: \"-ה\",\r\n        add_finish: \"סיים/י\",\r\n        add_com: \"בבקשה סיים/י את ה\",\r\n        add_choose_l: \"בחר/י רמה\",\r\n        add_done: \"סיים\",\r\n        add_check: \"בודק את ה\",\r\n        add_check_II: \"רק רגע\",\r\n        add_sorry: \"אופס! נראה שה\",\r\n        add_sorry_II: \"לא מתאים\",\r\n        add_fix: \"תקן/י\",\r\n        add_congrats: \"מזל טוב\",\r\n        add_congrats_II: \"ה\",\r\n        add_congrats_III: \"נוספה בהצלחה\",\r\n    }\r\n}\r\n\r\nfunction getNextCategory(currCategory, lng) {\r\n    const categoriesSrc = [nature, geography, animals, personalities, movies, medicine, food, sports, music, science, technology]\r\n    const categoriesNamesEnglish = ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology']\r\n    const categoriesNamesHebrew = ['טבע', 'גיאוגרפיה', 'בעלי חיים', 'אנשים', 'סרטים', 'רפואה', 'אוכל', 'ספורט', 'מוזיקה', 'מדע', 'טכנולוגיה']\r\n    var currArr = lng === 'English' ? categoriesNamesEnglish : categoriesNamesHebrew\r\n    var idx = currArr.findIndex(c => c.toUpperCase() === currCategory.toUpperCase())\r\n    var finalIdx = idx === 10 ? 0 : idx + 1\r\n    var nextCategory = { name: categoriesNamesEnglish[finalIdx].toUpperCase(), src: categoriesSrc[finalIdx] }\r\n    return { ...nextCategory }\r\n}","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx",["194"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//icons:\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport AssessmentRoundedIcon from '@material-ui/icons/AssessmentRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n//functions:\r\nimport { addQuestion } from '../store/actions/userAction.js'\r\nimport { loadData } from '../store/actions/dataAction.js';\r\n\r\n//imgs:\r\nimport incomplete from '../assets/imgs/incomplete.png'\r\nimport { gameService } from '../services/gameService.js';\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx';\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\nclass _Adding extends Component {\r\n\r\n    state = {\r\n        currUser: {},\r\n        optional: [\r\n            { txt: 'Write your question', min: 10, max: 120, name: 'q', value: '' },\r\n            { txt: 'The correct answer', min: 1, max: 30, name: 'correctAns', value: '' },\r\n            { txt: 'Wrong answer 1', min: 1, max: 30, name: 'wrong1', value: '' },\r\n            { txt: 'Wrong answer 2', min: 1, max: 30, name: 'wrong2', value: '' },\r\n            { txt: 'Wrong answer 3', min: 1, max: 30, name: 'wrong3', value: '' }\r\n        ],\r\n        tf: [\r\n            { txt: 'Write your statement', min: 10, max: 120, name: 'q', value: '' },\r\n            { correct: '' },\r\n            { fillTxt: 'True', c: '#47bd47d1', lightC: '#1bb81b57' },\r\n            { fillTxt: 'False', c: '#ff3737c2', lightC: '#ff000029' }\r\n        ],\r\n        isOptional: false,\r\n        isTF: true,\r\n        currArray: [],\r\n        cArr: [\r\n            {\r\n                txt: 'Categories',\r\n                isOpen: false,\r\n                arr: ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology']\r\n            },\r\n            {\r\n                txt: 'Countries',\r\n                isOpen: false,\r\n                arr: ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA']\r\n            }\r\n        ],\r\n        currCArr: [],\r\n        levels: [\r\n            { n: 'E', c: '#ff9800', lightC: '#ff98002e' },\r\n            { n: 'M', c: '#FF5733', lightC: '#ff573324' },\r\n            { n: 'H', c: '#E92337', lightC: '#f0707d2b' }\r\n        ],\r\n        final: {\r\n            object: {\r\n                question: '',\r\n                correct_answer: '',\r\n                incorrect_answers: []\r\n            },\r\n            level: '',\r\n            c: ''\r\n        },\r\n        finalInArray: [],\r\n        isFinishClicked: false,\r\n        isAllCompolete: false,\r\n        isLoadingFinal: false,\r\n        isInappropriate: false,\r\n        isDone: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadData()\r\n        const { data, history } = this.props\r\n        const currUser = storageService.load('currUser')\r\n        this.setState({ currUser })\r\n        if (!currUser?.nickname) history.push(\"/\")\r\n        this.reUpdateCurrArray()\r\n    }\r\n\r\n    reUpdateCurrArray = () => {\r\n        let { isOptional, optional, tf } = this.state\r\n        this.setState({ currArray: isOptional ? optional : tf })\r\n    }\r\n\r\n    onChangeInput = ({ target }) => {\r\n        let { currArray } = this.state\r\n        let currInputIdx = currArray.findIndex(obj => obj.name === target.name)\r\n        currArray[currInputIdx].value = target.value\r\n        this.setState({ currArray })\r\n    }\r\n\r\n    chooseTF = (fillTxt) => {\r\n        let { tf } = this.state\r\n        tf[1].correct = fillTxt\r\n        this.setState({ tf })\r\n    }\r\n\r\n    toggleC = (idx) => {\r\n        let { cArr } = this.state\r\n        cArr[idx].isOpen = !cArr[idx].isOpen\r\n        this.setState({ cArr })\r\n    }\r\n\r\n    updateFinal = (value) => {\r\n        let { final } = this.state\r\n        if (value.length > 1) final.c = value\r\n        else final.level = value\r\n        this.setState({ final })\r\n    }\r\n\r\n    finish = (ev) => {\r\n        ev.preventDefault()\r\n        let { currArray, final, tf } = this.state\r\n        let finalObj = {\r\n            object: {\r\n                question: currArray[0].value,\r\n                correct_answer: currArray === tf ? currArray[1].correct : currArray[1].value,\r\n                incorrect_answers: currArray === tf ? currArray[1].correct === 'True' ? ['False'] : ['True'] : [currArray[2].value, currArray[3].value, currArray[4].value]\r\n            },\r\n            level: final.level,\r\n            c: final.c\r\n        }\r\n        this.setState({ final: finalObj, isFinishClicked: true }, () => this.setState({ isAllCompolete: this.checkComplete() }))\r\n    }\r\n\r\n    checkComplete = () => {\r\n        let { final } = this.state\r\n        let finalInArray = [final.level, final.c]\r\n        for (let key in final.object) {\r\n            if (typeof final.object[key] === 'object') final.object[key].forEach(v => finalInArray.push(v))\r\n            else finalInArray.push(final.object[key])\r\n        }\r\n        this.setState({ finalInArray })\r\n        var incomplete = finalInArray.some(value => value === '')\r\n        return !incomplete\r\n    }\r\n\r\n    get levelForDisplay() {\r\n        let { level } = this.state.final\r\n        switch (level) {\r\n            case 'E': return 'Easy'\r\n            case 'M': return 'Medium'\r\n            case 'H': return 'Hard'\r\n            default:\r\n                return 'Easy'\r\n        }\r\n    }\r\n\r\n    onUploadQuestion = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isLoadingFinal: true })\r\n        let isInappropriate = this.checkFinal()\r\n\r\n        setTimeout(async () => {\r\n            const { currUser, final } = this.state\r\n            if (!isInappropriate) {\r\n                await this.props.addQuestion(this.props.data, currUser, final)\r\n                setTimeout(() => this.clear(), 3000)\r\n            }\r\n            this.setState({ isLoadingFinal: false, isDone: true })\r\n        }, 2500)\r\n    }\r\n\r\n    clear = () => {\r\n        var clearedArr = []\r\n        this.state.currArray.forEach(obj => {\r\n            Object.keys(obj).forEach(k => {\r\n                if (k === \"value\" || k === \"correct\") obj[k] = ''\r\n            })\r\n            clearedArr.push(obj)\r\n        })\r\n        this.setState({\r\n            currArray: clearedArr,\r\n            final: {\r\n                object: {\r\n                    question: '',\r\n                    correct_answer: '',\r\n                    incorrect_answers: []\r\n                },\r\n                level: '',\r\n                c: ''\r\n            },\r\n            isDone: false,\r\n            isFinishClicked: false\r\n        })\r\n        this.reUpdateCurrArray()\r\n    }\r\n\r\n    checkFinal = () => {\r\n        let { finalInArray } = this.state\r\n        let inappropriateArr = ['Curse', 'Slot', 'Whore', 'bitch', 'Harassment', 'Harass', 'Whore', 'Fuck', 'Fucked', 'Fucking', 'Dumb', 'Retarded', 'Stinking', 'Dick', 'Shit']\r\n\r\n        const finalSplitted = []\r\n        const splitted = finalInArray.map(v => v.split(\" \"))\r\n        splitted.forEach(s => finalSplitted.push(...s))\r\n\r\n        var isInappropriate\r\n        var counter = 0\r\n        let isDuplicate = false\r\n\r\n        inappropriateArr.forEach(i => finalSplitted.forEach(f => {\r\n            if (f === i || f === i.toUpperCase() || f === i.toLowerCase()) counter++\r\n        }))\r\n        isDuplicate = finalInArray.some((f, idx) => finalInArray.indexOf(f) !== idx)\r\n        isInappropriate = counter === 0 && !isDuplicate ? false : true\r\n        this.setState({ isInappropriate })\r\n        return isInappropriate\r\n    }\r\n\r\n    txtForDisplay = () => gameService.setAddingTxt(this.state.currUser?.game?.lang)\r\n\r\n    render() {\r\n        const { currUser, optional, tf, isOptional, isTF, currArray, levels, final, isFinishClicked, isAllCompolete, isLoadingFinal, isInappropriate, isDone, cArr } = this.state\r\n        const sOrQ = currUser?.game?.lang === 'English' ? currArray === tf ? 'statement' : 'question' : currArray === tf ? 'קביעה' : 'שאלה'\r\n        const txt = this.txtForDisplay()\r\n        return (\r\n\r\n            <section className=\"adding pa\">\r\n                <header className=\"flex j-evenly\">\r\n                    <p onClick={() => this.setState({ isOptional: true, isTF: false, currArray: optional })} style={isOptional ? { color: 'black', fontWeight: 'bold', textShadow: '1px -1px 2px white' } : { color: 'white', fontWeight: 100 }}>{txt.add_mult}</p>\r\n                    <p onClick={() => this.setState({ isOptional: false, isTF: true, currArray: tf })} style={isTF ? { color: 'black', fontWeight: 'bold', textShadow: '1px -1px 2px white' } : { color: 'white', fontWeight: 100 }}>{txt.add_tf}</p>\r\n                </header>\r\n                <form >\r\n                    {currArray.map((obj, idx) => <div className={`add-${idx}`} key={idx}>\r\n                        <div className=\"top flex j-between\">\r\n                            {obj.txt && <p>{obj.txt}</p>}\r\n                            {obj.max && <p>{`${obj.min}/${obj.max}`}</p>}\r\n                        </div>\r\n                        {currArray[idx].name && <textarea placeholder={idx === 0 && currArray !== tf ? 'Is The...' : ''} minLength={currArray[idx].min} maxLength={currArray[idx].max} value={currArray[idx].value} name={currArray[idx].name} required autoComplete=\"off\" onChange={this.onChangeInput} />}\r\n                    </div>)}\r\n                    {currArray === tf && <div className=\"tf flex j-between\">\r\n                        {[tf[2], tf[3]].map((obj, idx) => <div style={currArray[1].correct !== obj.fillTxt ? { boxShadow: `0 5px 3px ${obj.lightC}`, color: 'white', backgroundColor: obj.c } : { border: '1px solid black', color: 'black', backgroundColor: obj.c }} key={idx} onClick={() => this.chooseTF(obj.fillTxt)}>\r\n                            <p>{obj.fillTxt}</p>\r\n                        </div>)}\r\n                        <p className=\"tf-desc pf ttc\">{txt.add_desc}</p>\r\n                    </div>}\r\n                    <div className=\"c-or-c\">\r\n                        {cArr.map((c, idx) => < div onClick={() => this.toggleC(idx)} key={idx}>\r\n                            <p>{c.txt}</p>\r\n                            <p className=\"selected\" style={{ color: '#ff7629', position: 'absolute' }}>{c.arr.includes(final.c) ? final.c : ''}</p>\r\n                            <div className=\"cClass\">\r\n                                {c.arr.map((val, idx) => <p onClick={() => this.updateFinal(val)} style={{ color: final.c === val ? '#ff7629' : '' }} key={idx}>{val}</p>)}\r\n                            </div>\r\n                        </div>)}\r\n                    </div>\r\n                    <div className=\"or tac ttc\" style={{ fontSize: 'x-large', marginTop: '1%' }}>{txt.add_or}</div>\r\n\r\n                    <div className=\"levels\">\r\n                        <p>{txt.add_choose_l}</p>\r\n                        <div className=\"flex j-between\">\r\n                            {levels.map((l, idx) => <div className=\"level flex j-center tac\" onClick={() => this.updateFinal(l.n)} key={idx} style={final.level === l.n ? { color: 'white', backgroundColor: l.c } : { color: l.c, boxShadow: '0 4px 2px' + l.lightC }}>\r\n                                <p>{l.n}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={(ev) => this.finish(ev)} className=\"finish-btn flex tac\">\r\n                        <p className=\"ma\">{txt.add_finish}</p>\r\n                    </div>\r\n                </form>\r\n                <div className={`finish-modal ${isFinishClicked ? 'open' : ''}`} style={window.screen.height < 1000 ? { height: currArray === tf ? '85vw' : '50vh' } : {}}>\r\n                    <p>{txt.add_the + ' ' + sOrQ}</p>\r\n                    {!isLoadingFinal && !isInappropriate && !isDone && <CloseRoundedIcon onClick={() => this.setState({ isFinishClicked: false, isLoadingFinal: false, isInappropriate: false })} />}\r\n                    <div className=\"incomplete flex column a-center pa\" style={{ display: isAllCompolete ? 'none' : 'flex' }}>\r\n                        <p>{txt.add_com + ' ' + sOrQ}</p>\r\n                        <img src={incomplete} alt=\"\" />\r\n                    </div>\r\n                    {isAllCompolete && !isLoadingFinal && !isDone && <div>\r\n                        <div className=\"q\"><textarea readOnly value={final.object.question} /></div>\r\n                        <div className=\"answers grid\">\r\n                            {[final.object.correct_answer, ...final.object.incorrect_answers].map((ans, idx) => <div key={idx}>\r\n                                <textarea readOnly value={ans} style={{ border: idx === 0 ? '2px solid black' : '' }} />\r\n                            </div>)}\r\n                        </div>\r\n                        <div className=\"more flex j-between\">\r\n                            <p><BookRoundedIcon />{final.c}</p>\r\n                            <p>< AssessmentRoundedIcon />{this.levelForDisplay}</p>\r\n                        </div>\r\n                        <div className=\"submit flex a-center j-center pa\" style={{ marginTop: currArray === tf ? '1%' : '5%' }} onClick={(ev) => this.onUploadQuestion(ev)}>\r\n                            <p className=\"ma\">{txt.add_done}</p>\r\n                        </div>\r\n                    </div>}\r\n                    {isAllCompolete && isLoadingFinal && <div className=\"loading flex j-center\">\r\n                        <LoadCycle width=\"30%\" height=\"30%\" top=\"30%\" />\r\n                        <small>{`${txt.add_check + ' ' + sOrQ}. ${txt.add_check_II}`}</small>\r\n                    </div>}\r\n                    {isDone && isInappropriate && <div className=\"inappropriate\">\r\n                        <p>{txt.add_sorry + ' ' + sOrQ + ' ' + txt.add_sorry_II}</p>\r\n                        <div className=\"flex j-center a-center ma\" onClick={() => this.setState({ isFinishClicked: false, isDone: false, isAllCompolete: false, isLoadingFinal: false, isInappropriate: false })}>{txt.add_fix}</div>\r\n                    </div>}\r\n                    {isDone && !isInappropriate && <div className=\"done tac pr\">\r\n                        <span>{txt.add_congrats}</span>\r\n                        {txt.add_the + ' ' + sOrQ + ' ' + txt.add_congrats_III}\r\n                        <div className=\"success-checkmark flex j-center pa\"><CheckIcon /></div>\r\n                    </div>}\r\n                </div>\r\n            </section >\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    addQuestion,\r\n}\r\nexport const Adding = connect(mapStateToProps, mapDispatchToProps)(_Adding)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx",["195","196","197","198","199"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Howl } from 'howler';\r\nimport { gameService } from '../services/gameService.js';\r\n\r\n//cmps:\r\nimport { RoundIsFinished } from '../cmps/RoundIsFinished.jsx';\r\nimport { Timer } from '../cmps/Timer.jsx';\r\nimport { DynamicChildCmp } from '../cmps/DynamicChildCmp.jsx';\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx';\r\n\r\n//functions:\r\nimport { updateRoundIdx, updateLevel, updateCategory } from '../store/actions/gameAction.js'\r\nimport { loadData } from '../store/actions/dataAction.js';\r\nimport { updatePointsObj } from '../store/actions/userAction.js'\r\n\r\n//imgs:\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\n\r\nvar music = {\r\n    overworld: new Howl({ src: [''] })\r\n}\r\n\r\nclass _Playing extends Component {\r\n\r\n    state = {\r\n        currUser: {},\r\n        items: [],\r\n        roundIndex: null,\r\n        firstC: '',\r\n        objIndex: 0,\r\n        currL: {},\r\n        q: '',\r\n        answers: [],\r\n        correctAns: '',\r\n        correctCounter: 0,\r\n        answersClass: 'come',\r\n        countryQ: false,\r\n        currCategory: '',\r\n        currCountry: '',\r\n        IndicationClass: 'indication-label flex',\r\n        indicationClassObj: '',\r\n        isSpliced: false,\r\n        roundIsFinished: false,\r\n        isTimeOver: false,\r\n        isResetTime: false,\r\n        isFinishLevel: false,\r\n        roundFinishObj: '',\r\n        isCategoryFinished: false,\r\n        isLoadingQ: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await this.props.loadData()\r\n\r\n        const { data, history } = this.props\r\n        const currUser = storageService.load('currUser')\r\n        if (!currUser?.nickname) history.push(\"/\")\r\n        const { items } = data\r\n        const { soundObj, useQ, level, lang, roundIdx, category, country } = currUser?.game\r\n        this.setState({ currUser })\r\n\r\n        if (roundIdx === null) {\r\n            this.setState({ roundIndex: 0 })\r\n            await this.props.updateRoundIdx(data, currUser, 0)\r\n        } else this.setState({ roundIndex: roundIdx })\r\n\r\n        if (!level) this.props.updateLevel(data, currUser, { n: 'E', c: '#ff9800' })\r\n        this.setState({\r\n            currCategory: gameService.getCForDisplay(true, lang, category?.name),\r\n            currCountry: country,\r\n            currL: { ...level },\r\n            firstC: lang === 'English' ? 'nature' : 'טבע',\r\n            isCategoryFinished: false\r\n        }, () => this.setState({ items: useQ ? this.spliceItems(items[lang], this.transObjArr(lang, currUser.objectsArray)) : items[lang] }))\r\n\r\n        setTimeout(() => this.setState({ isLoadingQ: false }), 1200)\r\n\r\n        if (soundObj.soundStatus) this.playMusic(true)\r\n        this.startRound()\r\n    }\r\n\r\n    transObjArr = (lang, arr) => {\r\n        var a = arr.map(obj => obj = {\r\n            ...obj,\r\n            c: gameService.getCForDisplay(obj.c.substr(0, 1) !== obj.c.substr(0, 1).toUpperCase(), lang, obj.c),\r\n            object: lang === 'English' ? { ...obj.object } : {\r\n                ...obj.object,\r\n                correct_answer: obj.object.incorrect_answers.length > 2 ? obj.object.correct_answer : obj.object.correct_answer === 'True' ? 'נכון' : 'לא נכון',\r\n                incorrect_answers: obj.object.incorrect_answers.length > 2 ? [...obj.object.incorrect_answers] : obj.object.incorrect_answers === ['True'] ? ['נכון'] : ['לא נכון']\r\n            }\r\n        })\r\n        return a\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        music.overworld.stop()\r\n    }\r\n\r\n    playMusic = val => {\r\n        const { soundStatus, sound } = this.state.currUser.game.soundObj\r\n        music = { overworld: new Howl({ src: sound.s, loop: true, volume: 0.6 }) }\r\n        if (soundStatus)\r\n            if (val) {\r\n                if (!music.overworld.playing()) music.overworld.play()\r\n            } else music.overworld.fade(1, 0, 1000, music.overworld.play())\r\n    }\r\n\r\n    spliceItems = (items, objectsArray) => {\r\n        let { firstC } = this.state\r\n        var currLocation\r\n        objectsArray.forEach((obj, idx) => {\r\n            for (let location in items) {\r\n                var objectLocation = (Object.keys(items[location]).some(k => k.toUpperCase() === firstC.toUpperCase())) ? items.categories : items.countries\r\n                for (let currObjName in objectLocation) {\r\n                    if (currObjName === obj.c) currLocation = objectLocation === items.categories ? objectLocation[currObjName][obj.level][this.state.roundIndex] : objectLocation[currObjName][obj.level]\r\n                }\r\n            }\r\n            currLocation[idx] = obj.object\r\n            currLocation[idx][\"isSpliced\"] = true\r\n        })\r\n        return items\r\n    }\r\n\r\n    startRound = () => {\r\n        var { currCategory, items } = this.state\r\n        this.setState({ correctCounter: 0 })\r\n        this.getFullNextObject(currCategory, items.categories)\r\n    }\r\n\r\n    getFullNextObject = (objectName, objectLocation) => {\r\n\r\n        setTimeout(() => {\r\n\r\n            this.setState({ answersClass: 'come' })\r\n\r\n            let { answers, objIndex } = this.state\r\n            answers = this.objectAnswers(objectName, objectLocation).map(a => a = {\r\n                txt: this.state.currUser.game?.lang === 'English' ? a.slice(0, 1).toUpperCase() + a.slice(1) : a,\r\n                bgClr: 'white'\r\n            })\r\n\r\n            this.setState({\r\n                q: this.currObject(objectName, objectLocation).question,\r\n                answers,\r\n                correctAns: this.correctAnswer(objectName, objectLocation),\r\n                objIndex: objIndex === 10 ? 0 : objIndex + 1,\r\n                isSpliced: this.checkSplice(objectName, objectLocation)\r\n            }, () => {\r\n                this.setState({\r\n                    IndicationClass: this.state.isSpliced || this.state.objIndex === 10 ? 'indication-label flex show' : 'indication-label flex',\r\n                    indicationClassObj: this.indicationClassObj,\r\n                    roundFinishObj: this.roundFinishObj\r\n                })\r\n            })\r\n        }, 500)\r\n    }\r\n\r\n\r\n    currObject = (objectName, objectLocation) => {\r\n        let { roundIndex, objIndex, firstC, currL } = this.state\r\n        const { n } = currL\r\n        var currLocation\r\n        for (let currObjName in objectLocation) {\r\n            if (currObjName === objectName) currLocation = objectLocation[currObjName]\r\n        }\r\n        return Object.keys(objectLocation)[0] === firstC ? currLocation[n][roundIndex][objIndex] : currLocation[n][roundIndex]\r\n    }\r\n\r\n    correctAnswer = (objectName, objectLocation) => this.currObject(objectName, objectLocation).correct_answer\r\n\r\n    objectAnswers = (objectName, objectLocation) => {\r\n        let currQObject = this.currObject(objectName, objectLocation)\r\n        return this.shuffleAnswers([currQObject.correct_answer, ...currQObject?.incorrect_answers])\r\n    }\r\n\r\n    checkSplice = (objectName, objectLocation) => this.currObject(objectName, objectLocation).isSpliced\r\n\r\n    shuffleAnswers = arr => {\r\n        var copyArr = arr.slice()\r\n        var i, x, j\r\n        for (i = copyArr.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1))\r\n            x = copyArr[i]\r\n            copyArr[i] = copyArr[j]\r\n            copyArr[j] = x\r\n        }\r\n        return copyArr\r\n    }\r\n\r\n    checkAnswer = async (ev, answer) => {\r\n        ev.preventDefault()\r\n        let { answers, objIndex, correctCounter, items, correctAns, currCategory, currCountry } = this.state\r\n        var currUser = storageService.load('currUser')\r\n        const { data } = this.props\r\n        const { pointsObj, game } = currUser\r\n        const { level } = game\r\n\r\n        var timeOut = 200\r\n\r\n        let currAnswerIdx = answers.findIndex(currAns => currAns === answer)\r\n        let { bgClr } = answers[currAnswerIdx]\r\n        if (answer.txt === correctAns) {\r\n            bgClr = '#47bd47d1'\r\n            this.setState({ correctCounter: correctCounter + 1, countryQ: objIndex === 10 },\r\n                async () => {\r\n                    let objectLocation = this.state.countryQ ? pointsObj.countries : pointsObj.categories\r\n                    let isCategoryObject = !this.state.countryQ\r\n                    await this.props.updatePointsObj(data, currUser, this.calcPointsObj(pointsObj.fullPoints + (this.state.countryQ ? 15 : 10), objectLocation, isCategoryObject))\r\n                })\r\n        } else {\r\n            bgClr = '#ff3737c2'\r\n            timeOut += 1000\r\n            setTimeout(() => {\r\n                let currCorrectAnsIdx = answers.findIndex(ans => ans.txt.toLowerCase() === correctAns.toLowerCase())\r\n                answers[currCorrectAnsIdx].bgClr = '#47bd47d1'\r\n                this.setState({ answers })\r\n            }, 500)\r\n        }\r\n\r\n        answers[currAnswerIdx].bgClr = bgClr\r\n        this.setState({ answers })\r\n\r\n        if (objIndex === 10) setTimeout(() => this.setState({ roundIsFinished: true, isCategoryFinished: level.n === 'H' }), timeOut + 100)\r\n        else {\r\n            let objectLocation = objIndex === 9 ? items.countries : items.categories\r\n            let objectName = objIndex === 9 ? currCountry : currCategory.toLowerCase()\r\n            setTimeout(() => this.setState({ answersClass: 'leave' }), timeOut)\r\n            setTimeout(() => this.getFullNextObject(objectName, objectLocation), timeOut + 100)\r\n        }\r\n    }\r\n\r\n    calcPointsObj = (fullPoints, objectLocation, isCategoryObject) => {\r\n        var { currCategory, currCountry, currUser, currL } = this.state\r\n        const { pointsObj, game } = currUser\r\n        const { level, lang } = game\r\n        var copyPointsObj = pointsObj\r\n        const objectName = lang === 'English' ? isCategoryObject ? currCategory.toLowerCase() : currCountry : gameService.transToEn(isCategoryObject, currCategory, currCountry)\r\n        for (let currObject in objectLocation) {\r\n            if (currObject === objectName) objectLocation[currObject][currL.n] += isCategoryObject ? 10 : 15\r\n        }\r\n        copyPointsObj.fullPoints = fullPoints\r\n        return copyPointsObj\r\n    }\r\n\r\n    onTimeIsOver = () => this.setState({ roundIsFinished: true, isTimeOver: true })\r\n\r\n    continue = async (v, status) => {\r\n        const { data, updateRoundIdx, updateLevel } = this.props\r\n        let { roundIndex } = this.state\r\n        let user = storageService.load('currUser')\r\n        this.setState({ currUser: { ...user } })\r\n        setTimeout(() => this.setState({ roundIsFinished: false, isResetTime: true }), 400)\r\n\r\n        switch (status) {\r\n            case 'round':\r\n                await updateRoundIdx(data, user, roundIndex + 1)\r\n                this.setState({ roundIndex: roundIndex + 1, objIndex: 0 }, v ? this.startRound() : '')\r\n                break\r\n            case 'finish':\r\n                await updateRoundIdx(data, user, 0)\r\n                let _user = storageService.load('currUser')\r\n                await updateLevel(data, _user, this.levelForUpdate)\r\n                this.finishLevel()\r\n                this.setState({ objIndex: 0 }, () => v ? this.startRound() : '')\r\n                break\r\n            default:\r\n                this.setState({ objIndex: 0 }, () => v ? this.startRound() : '')\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n    finishLevel = () => {\r\n        const { data } = this.props\r\n        let user = storageService.load('currUser')\r\n        if (this.levelForUpdate.n !== 'E') this.setState({ currL: { ...this.levelForUpdate } })\r\n        else this.finishCategory(data, user, gameService.getNextCategory(this.state.currCategory, user.game?.lang))\r\n        this.setState({ currUser: { ...user }, isFinishLevel: true, roundIndex: 0 })\r\n    }\r\n\r\n\r\n    get levelForUpdate() {\r\n        let { level } = this.state.currUser?.game\r\n        switch (level.n) {\r\n            case 'E': return { n: 'M', c: '#FF5733' }\r\n            case 'M': return { n: 'H', c: '#E92337' }\r\n            case 'H': return { n: 'E', c: '#ff9800' }\r\n            default: return level\r\n        }\r\n    }\r\n\r\n    finishCategory = async (data, currUser, nextCategory) => {\r\n        this.setState({ isCategoryFinished: true, currCategory: { ...nextCategory } })\r\n        await this.props.updateCategory(data, currUser, nextCategory)\r\n    }\r\n    onTurnResetTimeOff = () => this.setState({ isResetTime: false })\r\n\r\n    get roundFinishObj() {\r\n        var { objIndex, roundIndex, currUser } = this.state\r\n        var isEn = currUser.game.lang === 'English'\r\n\r\n        if (objIndex === 10) {\r\n            if (roundIndex === 9) return isEn ? {\r\n                status: 'finish',\r\n                largeTxt: 'level completed!',\r\n                littleTxt: 'congratulations!',\r\n                continueTxt: 'next level'\r\n            } : {\r\n                status: 'finish',\r\n                largeTxt: 'סיימת שלב!',\r\n                littleTxt: 'מזל טוב!',\r\n                continueTxt: 'שלב הבא'\r\n            }\r\n            else return isEn ? {\r\n                status: 'round',\r\n                largeTxt: 'round completed',\r\n                littleTxt: 'Let\\'s see your results',\r\n                continueTxt: 'next round'\r\n            } : {\r\n                status: 'round',\r\n                largeTxt: 'סיימת סיבוב!',\r\n                littleTxt: 'התוצאות שלך',\r\n                continueTxt: 'הסיבוב הבא'\r\n            }\r\n        } else return isEn ? {\r\n            status: 'time',\r\n            largeTxt: 'time is over...',\r\n            littleTxt: 'Better luck next time!',\r\n            continueTxt: 'try again'\r\n        } : {\r\n            status: 'time',\r\n            largeTxt: 'נגמר הזמן...',\r\n            littleTxt: 'בהצלחה בפעם הבאה!',\r\n            continueTxt: 'נסה/י שוב'\r\n        }\r\n    }\r\n\r\n    get indicationClassObj() {\r\n        var isEn = this.state.currUser.game.lang === 'English'\r\n        var { isSpliced, objIndex } = this.state\r\n        if (isSpliced) var finalObj = { c: objIndex === 10 ? '#e96b3c' : '#937c37', txt: isEn ? 'Your Question' : 'השאלה שלך', status: true }\r\n        else if (objIndex === 10) finalObj = { c: '#6a6a6a', txt: isEn ? 'Country Question' : 'שאלת מדינה', status: false }\r\n        return finalObj\r\n    }\r\n\r\n    get qForDisplay() {\r\n        const { q, answers, currUser } = this.state\r\n        return answers.length > 2 ? currUser?.game.lang === 'English' ? q + '?' : window.screen.width > 500 && q.length < 40 ? '?' + q : q : q\r\n    }\r\n\r\n    ansLength = () => this.state.answers.some(ans => ans.txt.length > 50)\r\n\r\n    render() {\r\n        const { data } = this.props\r\n        const { currL, answers, currUser, objIndex, roundIsFinished, roundIndex, IndicationClass, isResetTime, indicationClassObj, roundFinishObj, isCategoryFinished, countryQ, correctCounter, answersClass, currCountry, isLoadingQ } = this.state\r\n        const { pointsObj, game } = currUser\r\n        const category = currUser?.game?.category\r\n        const level = currUser?.game?.level\r\n        const timeObj = currUser?.game?.timeObj\r\n        const lang = currUser?.game?.lang\r\n        const isOnDesktop = window.screen.height >= 800\r\n        if (!this.state || !currUser) return <LoadCycle width=\"30%\" height=\"30%\" top=\"30%\" />\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <section className=\"playing\" style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif' }}>\r\n\r\n                    <header className=\"flex j-between\">\r\n                        <div><p>{`${objIndex}/10`}</p></div>\r\n\r\n                        {timeObj?.timeStatus && !isLoadingQ && <Timer time={timeObj?.time} timeIsOver={this.onTimeIsOver} roundIsFinished={roundIsFinished} isResetTime={isResetTime} turnResetTimeOff={this.onTurnResetTimeOff} />}\r\n\r\n                        {!isLoadingQ && <Link to={`/${window.screen.width < 500 ? 'settings' : 'about'}`}> <div style={{ backgroundColor: currL?.c }}>\r\n                            <img src={category?.src} alt=\"\" />\r\n                            <p>{currL?.n}</p>\r\n                        </div>\r\n                        </Link>}\r\n                    </header>\r\n\r\n                    <div className=\"main-container\" style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif' }}>\r\n                        <div className=\"q flex j-center\">\r\n                            <div style={{ backgroundColor: indicationClassObj?.c, flexDirection: lang === 'English' ? 'row' : 'row-reverse' }} className={IndicationClass}>\r\n                                <p>{indicationClassObj?.txt}</p>\r\n                                {!indicationClassObj?.status && <p>{currCountry}</p>}\r\n                            </div>\r\n                            {isLoadingQ && <LoadCycle width=\"40%\" height=\"20%\" top=\"50%\" />}\r\n                            {!isLoadingQ && <p>{this.qForDisplay}</p>}\r\n                        </div>\r\n                        <div className={`options ${answersClass}`}>\r\n                            {answers.map((ans, idx) => <div key={idx} onClick={(ev) => this.checkAnswer(ev, ans)} style={{ backgroundColor: ans.bgClr, padding: ans.txt.length > 50 ? '3%' : '5%', fontSize: this.ansLength() || ans.txt.length > 50 ? 'smaller' : 'unset' }}>{ans.txt}</div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"backImgs\">\r\n                        <img src={finish} alt=\"\" />\r\n                        <img src={clock} alt=\"\" />\r\n                        <img src={round} alt=\"\" />\r\n                        <img src={round} alt=\"\" />\r\n                        <img src={finish} alt=\"\" />\r\n                    </div>\r\n                    <div className={`back-shadow ${roundIsFinished ? 'dark' : ''}`} ></div>\r\n                </section>\r\n\r\n                <RoundIsFinished lang={lang} currRound={roundIndex} className={`roundIsFinished ${roundIsFinished ? 'show' : ''}`} roundIsFinished={roundIsFinished} points={pointsObj?.fullPoints} countryQ={countryQ} correctCounter={correctCounter}>\r\n                    <DynamicChildCmp lang={lang} continue={this.continue} roundFinishObj={roundFinishObj} isCategoryFinished={isCategoryFinished} />\r\n                </RoundIsFinished>\r\n\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    updatePointsObj,\r\n    updateRoundIdx,\r\n    updateLevel,\r\n    updateCategory\r\n}\r\nexport const Playing = connect(mapStateToProps, mapDispatchToProps)(_Playing)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx",["200","201"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n// import styled, { keyframes } from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport wrong from '../assets/imgs/wrong.png'\r\n\r\n//icons:\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport DragHandleRoundedIcon from '@material-ui/icons/DragHandleRounded';\r\n\r\nexport function RoundIsFinished(props) {\r\n\r\n    const { currRound, className, children, roundIsFinished, correctCounter, points, countryQ, lang } = props\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <section className={className} style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif', direction: lang === 'English' ? 'ltr' : 'rtl' }}>\r\n            <header>\r\n                <Link to=\"/home\"><ArrowBackIosRoundedIcon /></Link>\r\n                <h2> {t('rFinish-r') +' '+(currRound + 1)}</h2>\r\n            </header>\r\n            <div className=\"points grid pa\">\r\n                <div>\r\n                    <p>{t('rFinish-rP')}</p>\r\n                    <p>{correctCounter * 10}</p>\r\n                </div>\r\n                <AddRoundedIcon />\r\n                <div>\r\n                    <p>{t('rFinish-cQ')}</p>\r\n                    <p>{countryQ ? 15 : ''}</p>\r\n                    <img src={wrong} alt=\"\" style={{ opacity: countryQ ? '0' : '1' }} />\r\n                </div>\r\n                <DragHandleRoundedIcon />\r\n                <div>\r\n                    <p>{t('rFinish-fP')}</p>\r\n                    <p style={{ fontSize: roundIsFinished ? '100%' : '0%' }}>{(correctCounter * 10) + (countryQ ? 15 : 0)} <span className=\"plus-span pa\">+</span> </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"round-status flex a-center pa\">\r\n                <span style={{ width: roundIsFinished ? `${correctCounter * 9.4}%` : '0' }}></span>\r\n                <p>{correctCounter}/10</p>\r\n            </div>\r\n            <div className=\"content tac\">\r\n                {children}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx",[],["202","203"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx",["204"],"import React, { Component } from 'react';\r\nimport { FinishCmpChild } from './FinishCmpChild';\r\nimport { RoundCmpChild } from './RoundCmpChild';\r\nimport { TimeCmpChild } from './TimeCmpChild';\r\n\r\nexport class DynamicChildCmp extends Component {\r\n\r\n    state = { passingContinue: '' }\r\n\r\n    componentDidMount = () => {\r\n        var propsForDisplay = this.propsForDisplay()\r\n        this.setState({ passingContinue: propsForDisplay.continue })\r\n    }\r\n\r\n    propsForDisplay() {\r\n        return { continue: this.props.continue }\r\n    }\r\n\r\n    render() {\r\n        const { passingContinue } = this.state\r\n        const { roundFinishObj, isCategoryFinished,lang } = this.props\r\n        if (!roundFinishObj.status) return <h1></h1>\r\n        else\r\n            switch (roundFinishObj?.status) {\r\n                case 'round':\r\n                    return <RoundCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'time':\r\n                    return <TimeCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'finish':\r\n                    return <FinishCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} isCategoryFinished={isCategoryFinished} />\r\n                default:\r\n                    return null\r\n            }\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx",["205"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport backImg from '../assets/imgs/round.png'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport function RoundCmpChild(props) {\r\n    const { roundFinishObj } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"roundCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" onClick={async () => await props.continue(false, roundFinishObj?.status)} className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(true, roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx",["206"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport backImg from '../assets/imgs/time.png'\r\n\r\nexport function TimeCmpChild(props) {\r\n    const { roundFinishObj } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"timeCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" onClick={async () => await props.continue(false, roundFinishObj?.status)} className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(true, roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx",["207","208"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { loadData } from '../store/actions/dataAction.js';\r\nimport { resetPoints } from '../store/actions/userAction.js'\r\nimport { StatCmp } from '../cmps/StatCmp';\r\nimport { storageService } from '../services/session-storage.js';\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx';\r\n\r\nexport const Dashboard = ({ history }) => {\r\n\r\n\r\n    const { data } = useSelector(state => state.dataModule)\r\n    const dispatch = useDispatch()\r\n\r\n    const [currUser, setCurrUser] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [nickname, setNickname] = useState('')\r\n    const [pointsObj, setPointsObj] = useState({})\r\n    const [lang, setLang] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        await dispatch(loadData())\r\n        const user = storageService.load('currUser')\r\n        if (!user?.nickname) history.push(\"/\")\r\n        setCurrUser(user)\r\n        setTimeout(() => setIsLoading(false), 150)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setNickname(currUser.nickname)\r\n        setPointsObj(currUser.pointsObj)\r\n        setLang(currUser.game?.lang)\r\n    }, [currUser])\r\n\r\n    const calculatedWidth = () => (currUser.pointsObj?.fullPoints / (43650 / 100)).toFixed(1)\r\n\r\n    const calculatedHeight = () => {\r\n        const w = calculatedWidth()\r\n        if (w > 15) return 70\r\n        else {\r\n            if (w === 0) return 0\r\n            else\r\n                if (w < 1 && !Number.isInteger(w)) return 20\r\n                else\r\n                    if (w < 6) return w * 10\r\n                    else return ((w - 5) * 2) + 50\r\n        }\r\n    }\r\n\r\n    const title = () => currUser.game.lang === 'English' ? 'total points percentage' : 'אחוז הנקודות הכולל'\r\n\r\n    if (!nickname) return <LoadCycle width=\"40%\" height=\"20%\" top=\"50%\" />\r\n\r\n    if (pointsObj.fullPoints >= 43650) {\r\n        const txt = lang === 'English' ?\r\n            {\r\n                t: 'WOW!! Seems You\\'ve Got All The Points',\r\n                f: 'Now Your Points Are Reset To Zero',\r\n                c: 'OK, Thank You',\r\n            }\r\n            : {\r\n                t: 'וואו! נראה שהגעת למכסת הנקודות',\r\n                f: 'עכשיו הנקודות שלך מתאפסות',\r\n                c: 'הבנתי תודה :)'\r\n            }\r\n        Swal.fire({\r\n            title: txt.t,\r\n            text: txt.f,\r\n            position: 'top-start',\r\n            icon: 'success',\r\n            iconColor: '#ff641a',\r\n            confirmButtonText: txt.c,\r\n            confirmButtonColor: '#ff641a',\r\n            allowOutsideClick: false\r\n        }).then(res => {\r\n            if (res.isConfirmed) {\r\n                dispatch(resetPoints(data, currUser))\r\n                history.push(`/about`)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <LoadCycle width=\"40%\" height=\"20%\" top=\"50%\" />}\r\n            {!isLoading && <section className=\"dashboard pf page\" >\r\n                <div className=\"total-points ma tac flex a-center\">\r\n                    <header><p>{title()}</p></header>\r\n                    <div className=\"progress-container flex a-center\">\r\n                        <p>{calculatedWidth().substr(0, 1)}% <span>{`(${pointsObj?.fullPoints} / 43,650)`}</span></p>\r\n                        <div className=\"percent pa\"\r\n                            style={{\r\n                                width: `${pointsObj?.fullPoints < 500 ? '1' : calculatedWidth() * window.screen.height < 800 ? 0.9 : 0.955}%`,\r\n                                height: window.screen.height < 800 ? `${pointsObj?.fullPoints < 800 ? `${calculatedHeight()}` : '70'}%` : '60%',\r\n                                animation: window.screen.height < 800 ? `${calculatedWidth() * 0.9 < 20 ? 'progressSmall' : 'progressBig'} 3s ease` : 'progressBig 3s ease'\r\n                            }}></div>\r\n                    </div>\r\n                </div>\r\n                <StatCmp pointsObj={pointsObj} data={data} currUser={currUser} />\r\n            </section>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx",["209"],"import React, { Component } from 'react';\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//states:\r\nimport argentina from '../assets/flags/argentina.png'\r\nimport australia from '../assets/flags/australia.png'\r\nimport austria from '../assets/flags/austria.png'\r\nimport belgium from '../assets/flags/belgium.png'\r\nimport brazil from '../assets/flags/brazil.png'\r\nimport canada from '../assets/flags/canada.png'\r\nimport china from '../assets/flags/china.png'\r\nimport colombia from '../assets/flags/colombia.png'\r\nimport denmark from '../assets/flags/denmark.png'\r\nimport england from '../assets/flags/england.png'\r\nimport ethiopia from '../assets/flags/ethiopia.png'\r\nimport finland from '../assets/flags/finland.png'\r\nimport france from '../assets/flags/france.png'\r\nimport germany from '../assets/flags/germany.png'\r\nimport india from '../assets/flags/india.png'\r\nimport israel from '../assets/flags/israel.png'\r\nimport italy from '../assets/flags/italy.png'\r\nimport japan from '../assets/flags/japan.png'\r\nimport mexico from '../assets/flags/mexico.png'\r\nimport morocco from '../assets/flags/morocco.png'\r\nimport philippines from '../assets/flags/philippines.png'\r\nimport poland from '../assets/flags/poland.png'\r\nimport portugal from '../assets/flags/portugal.png'\r\nimport romania from '../assets/flags/romania.png'\r\nimport russia from '../assets/flags/russia.png'\r\nimport spain from '../assets/flags/spain.png'\r\nimport sweden from '../assets/flags/sweden.png'\r\nimport switzerland from '../assets/flags/switzerland.png'\r\nimport thailand from '../assets/flags/thailand.png'\r\nimport ukraine from '../assets/flags/ukraine.png'\r\nimport usa from '../assets/flags/usa.png'\r\n\r\n//categories:\r\nimport nature from '../assets/imgs/categories/nature-c.png'\r\nimport animals from '../assets/imgs/categories/animals-c.png'\r\nimport food from '../assets/imgs/categories/food-c.png'\r\nimport geography from '../assets/imgs/categories/geography-c.png'\r\nimport medicine from '../assets/imgs/categories/medicine-c.png'\r\nimport movies from '../assets/imgs/categories/movies-c.png'\r\nimport personalities from '../assets/imgs/categories/personalities-c.png'\r\nimport science from '../assets/imgs/categories/science-c.png'\r\nimport music from '../assets/imgs/categories/music-c.png'\r\nimport technology from '../assets/imgs/categories/technology-c.png'\r\nimport sports from '../assets/imgs/categories/sports-c.png'\r\n\r\nimport { StatModal } from './StatModal';\r\n\r\nclass _StatCmp extends Component {\r\n\r\n    state = {\r\n        states: [\r\n            {\r\n                title: 'categories',\r\n                arr: [\r\n                    { s: nature, n: 'nature' }, { s: geography, n: 'geography' }, { s: animals, n: 'animals' }, { s: personalities, n: 'personalities' }, { s: movies, n: 'movies' }, { s: medicine, n: 'medicine' }, { s: food, n: 'food' }, { s: sports, n: 'sports' }, { s: music, n: 'music' }, { s: science, n: 'science' }, { s: technology, n: 'technology' }\r\n                ]\r\n            },\r\n            {\r\n                title: 'countries',\r\n                arr: [{ s: argentina, n: 'Argentina' }, { s: australia, n: 'Australia' }, { s: austria, n: 'Austria' }, { s: belgium, n: 'Belgium' }, { s: brazil, n: 'Brazil' }, { s: canada, n: 'Canada' }, { s: china, n: 'China' }, { s: colombia, n: 'Colombia' }, { s: denmark, n: 'Denmark' }, { s: england, n: 'England' }, { s: ethiopia, n: 'Ethiopia' }, { s: finland, n: 'Finland' }, { s: france, n: 'France' }, { s: germany, n: 'Germany' }, { s: india, n: 'India' }, { s: israel, n: 'Israel' }, { s: italy, n: 'Italy' }, { s: japan, n: 'Japan' }, { s: mexico, n: 'Mexico' }, { s: morocco, n: 'Morocco' }, { s: philippines, n: 'Philippines' }, { s: poland, n: 'Poland' }, { s: portugal, n: 'Portugal' }, { s: romania, n: 'Romania' }, { s: russia, n: 'Russia' }, { s: spain, n: 'Spain' }, { s: sweden, n: 'Sweden' }, { s: switzerland, n: 'Switzerland' }, { s: thailand, n: 'Thailand' }, { s: ukraine, n: 'Ukraine' }, { s: usa, n: 'USA' }]\r\n            }\r\n        ],\r\n        forTrans: [\r\n            ['טבע', 'גיאוגרפיה', 'בעלי חיים', 'אנשים', 'סרטים', 'רפואה', 'אוכל', 'ספורט', 'מוזיקה', 'מדע', 'טכנולוגיה'],\r\n            ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'גנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית'],\r\n            ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology'],\r\n            ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA']\r\n\r\n        ],\r\n        currVal: '',\r\n        isModalOpen: false,\r\n        currObj: '',\r\n        cData: '',\r\n        options: ''\r\n    }\r\n\r\n    get statesForDisplay() {\r\n        var { forTrans, states } = this.state\r\n        var { lang } = this.props.currUser.game\r\n\r\n        var transArr = []\r\n        let copyStates = states.slice()\r\n        copyStates.forEach((state, idx) => {\r\n            state.title = lang === 'English' ? idx === 0 ? 'categories' : 'countries' : idx === 0 ? 'קטגוריות' : 'ארצות'\r\n            state.arr.forEach((obj, index) => {\r\n                obj.n = lang === 'English' ? forTrans[idx === 0 ? 2 : 3][index] : forTrans[idx === 0 ? 0 : 1][index]\r\n            })\r\n            transArr.push(state)\r\n        })\r\n\r\n        return transArr\r\n\r\n    }\r\n\r\n    openModal = (index, c, title, idx) => {\r\n        const { lang } = this.props.currUser?.game\r\n        this.setState({ isModalOpen: true, currVal: title })\r\n        this.getLevelsPoints(this.getCurrObj(this.transC(index, c, idx, lang), this.transT(index)))\r\n    }\r\n\r\n    transC = (index, c, idx, lang) => {\r\n        const { forTrans } = this.state\r\n        return lang === 'English' ? c : forTrans[index === 0 ? 2 : 3][idx]\r\n    }\r\n\r\n    transT = (index) => index === 0 ? \"categories\" : \"countries\"\r\n\r\n    getCurrObj = (n, title) => {\r\n        return this.props.pointsObj[title][n]\r\n    }\r\n    getMaxForDispaly = () => this.state.currVal === \"categories\" || \"קטגוריות\" ? 900 : 150\r\n\r\n    getLevelsPoints = (currObj) => {\r\n        var isEn = this.props.currUser.game.lang === 'English' ? true : false\r\n        this.setState({ currObj }, () => {\r\n            const colors = ['rgb(255, 152, 0,0.7)', 'rgb(255,87,51,0.9)', 'rgb(233, 35, 55,0.9)']\r\n            const cData = {\r\n                labels: isEn ? ['Easy', 'Medium', 'Hard'] : ['קל', 'בינוני', 'קשה'],\r\n                datasets: [{\r\n                    data: Object.values(this.state.currObj),\r\n                    label: isEn ? 'Points' : \"מס' נקודות\",\r\n                    backgroundColor: [...colors],\r\n                    hoverBackgroundColor: [...colors]\r\n                }]\r\n            }\r\n            const options = {\r\n                scales: {\r\n                    y: {\r\n                        suggestedMin: 0,\r\n                        suggestedMax: this.getMaxForDispaly()\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ cData, options })\r\n        })\r\n    }\r\n\r\n    onCloseModal = () => this.setState({ isModalOpen: false })\r\n\r\n\r\n    render() {\r\n        const { states, isModalOpen, cData, options } = this.state\r\n        const finalStates = this.statesForDisplay\r\n        const { lang } = this.props.currUser.game\r\n        var isEn = lang === 'English' ? true : false\r\n        return (\r\n            <section className=\"stat-cmp pa\" style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }}>\r\n                <div className={`dark-div ${isModalOpen ? 'show' : ''}`}></div>\r\n                <h2>{isEn ? 'choose a type for its statistic' : 'בחר/י סוג קטגוריה'}</h2>\r\n                <section className=\"c-section flex column tac\" style={{ opacity: isModalOpen ? 0 : 1 }}>\r\n                    {finalStates?.map((s, index) => <div className=\"arr-div\" key={index}>\r\n                        <h3>{s.title}</h3>\r\n                        <div className=\"c-div flex\">\r\n                            {s.arr.map((c, idx) => <div onClick={() => this.openModal(index, c.n, s.title, idx)} className=\"c\" key={idx}>\r\n                                <img src={c.s} alt=\"\" />\r\n                                <p style={{ fontSize: c.n.length >= 8 ? 'small' : 'medium', bottom: '7%' }}>{c.n}</p>\r\n                            </div>)}\r\n                            <span className=\"c flex column\" style={{ opacity: 0 }}>\r\n                                <img src=\"\" alt=\"\" />\r\n                                <p></p>\r\n                            </span>\r\n                        </div>\r\n                    </div>)}\r\n                </section>\r\n                <StatModal lang={lang} className={`stat-modal ${isModalOpen ? 'show' : ''}`} data={cData} options={options} closeModal={this.onCloseModal} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData\r\n}\r\nexport const StatCmp = connect(mapStateToProps, mapDispatchToProps)(_StatCmp)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx",["210","211","212"],"import React from 'react';\r\nimport { Bar, Doughnut, Line, Pie } from 'react-chartjs-2'\r\nimport { useTranslation } from 'react-i18next'\r\n//icons:\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport function StatModal({ closeModal, className, data, options, currVal, lang }) {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className={className}>\r\n            <div className=\"pa flex j-between\">\r\n                <CloseRoundedIcon onClick={closeModal} />\r\n                <p>{currVal}</p>\r\n            </div>\r\n            <Bar data={data}\r\n                options={options}\r\n            />\r\n            <p style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif' }}>{window.screen.height > 800 ? t('modal-desc'):''}</p>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx",["213"],"import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\n\r\nexport const Logout = ({ logout, history }) => {\r\n\r\n    const [isEn, setIsEn] = useState(true)\r\n\r\n    useEffect(async () => {\r\n        const user = storageService.load('currUser')\r\n        setIsEn(user?.game?.lang === 'English' ? true : false)\r\n    }, [])\r\n\r\n    const doLogout = () => {\r\n        Swal.fire({\r\n            title: isEn ? 'Are Your Sure You Want To Log Out?' : '?בטוח',\r\n            showCancelButton: true,\r\n            focusCancel: true,\r\n            confirmButtonText: isEn ? 'Yes' : 'כן',\r\n            confirmButtonColor: '#ff955a',\r\n            reverseButtons: true,\r\n            allowOutsideClick: false,\r\n            cancelButtonText: isEn ? 'Cancel' : 'ביטול'\r\n        }).then(result => {\r\n            if (result.isConfirmed) {\r\n                logout()\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout a-center ttc j-center flex\" onClick={doLogout}>\r\n            <p>{`${isEn ? 'Log out' : 'התנתק/י'}`}<span><ExitToAppIcon /></span></p>\r\n        </div>\r\n    );\r\n}","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\httpService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\dataReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\dataAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\dataService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\LoadCycle.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\session-storage.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\AboutMe.jsx",["214","215","216","217"],"import React, { Component } from 'react';\r\n\r\n//imgs:\r\nimport profile from '../assets/imgs/profile.png'\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\n\r\n//icons:\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nexport function AboutMe() {\r\n\r\n    return (\r\n        <section className=\"about-me pf ttc\">\r\n            <div className=\"top pa flex column\">\r\n                <p className=\"tac\">adina zwebner</p>\r\n                <div className=\"pa\"><img src={profile} alt=\"\" /></div>\r\n            </div>\r\n            <main className=\"pa tac\">\r\n                <p>i'm a <b>full-stack web developer</b> who enjoys facing challenges, loves coding and turning imaginary ideas into “live” sites and web applications</p>\r\n            </main>\r\n            <span className=\"flex j-evenly pa\">Copyright <CopyrightIcon /> 2021 by adina zwebner </span>\r\n            <footer className=\"pa flex column ttc a-center j-evenly\">\r\n                <h2>contact me</h2>\r\n                <div className=\"flex j-evenly\">\r\n                    <a href=\"https://www.facebook.com/adina.zwebner\"><FacebookIcon /></a>\r\n                    <a href=\"https://github.com/adina9\"><GitHubIcon /></a>\r\n                    <a href=\"https://linkedin.com/in/adina-zwebner-451401205\"><LinkedInIcon /></a>\r\n                </div>\r\n            </footer>\r\n        </section>\r\n    );\r\n\r\n}\r\n",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":49,"column":15,"nodeType":"224","endLine":54,"endColumn":6},{"ruleId":"222","severity":1,"message":"225","line":54,"column":8,"nodeType":"226","endLine":54,"endColumn":10,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":114,"column":17,"nodeType":"230","messageId":"231","endLine":114,"endColumn":21},{"ruleId":"228","severity":1,"message":"232","line":114,"column":32,"nodeType":"230","messageId":"231","endLine":114,"endColumn":43},{"ruleId":"228","severity":1,"message":"233","line":185,"column":35,"nodeType":"230","messageId":"231","endLine":185,"endColumn":39},{"ruleId":"228","severity":1,"message":"234","line":153,"column":53,"nodeType":"230","messageId":"231","endLine":153,"endColumn":60},{"ruleId":"228","severity":1,"message":"235","line":153,"column":62,"nodeType":"230","messageId":"231","endLine":153,"endColumn":76},{"ruleId":"228","severity":1,"message":"236","line":357,"column":9,"nodeType":"230","messageId":"231","endLine":357,"endColumn":16},{"ruleId":"228","severity":1,"message":"237","line":134,"column":12,"nodeType":"230","messageId":"231","endLine":134,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":150,"column":15,"nodeType":"224","endLine":191,"endColumn":6},{"ruleId":"222","severity":1,"message":"238","line":191,"column":8,"nodeType":"226","endLine":191,"endColumn":10,"suggestions":"239"},{"ruleId":"228","severity":1,"message":"240","line":197,"column":30,"nodeType":"230","messageId":"231","endLine":197,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":145,"column":13,"nodeType":"243","messageId":"244","endLine":157,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":160,"column":13,"nodeType":"243","messageId":"244","endLine":192,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":78,"column":17,"nodeType":"230","messageId":"231","endLine":78,"endColumn":21},{"ruleId":"228","severity":1,"message":"245","line":242,"column":17,"nodeType":"230","messageId":"231","endLine":242,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":361,"column":17,"nodeType":"230","messageId":"231","endLine":361,"endColumn":21},{"ruleId":"228","severity":1,"message":"233","line":363,"column":28,"nodeType":"230","messageId":"231","endLine":363,"endColumn":32},{"ruleId":"228","severity":1,"message":"245","line":365,"column":15,"nodeType":"230","messageId":"231","endLine":365,"endColumn":20},{"ruleId":"228","severity":1,"message":"232","line":368,"column":15,"nodeType":"230","messageId":"231","endLine":368,"endColumn":26},{"ruleId":"228","severity":1,"message":"246","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"247","line":14,"column":78,"nodeType":"230","messageId":"231","endLine":14,"endColumn":84},{"ruleId":"218","replacedBy":"248"},{"ruleId":"220","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":22,"column":44,"nodeType":"252","endLine":22,"endColumn":48},{"ruleId":"228","severity":1,"message":"246","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"246","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":23,"column":15,"nodeType":"224","endLine":29,"endColumn":6},{"ruleId":"222","severity":1,"message":"225","line":29,"column":8,"nodeType":"226","endLine":29,"endColumn":10,"suggestions":"253"},{"ruleId":"228","severity":1,"message":"254","line":148,"column":17,"nodeType":"230","messageId":"231","endLine":148,"endColumn":23},{"ruleId":"228","severity":1,"message":"255","line":2,"column":15,"nodeType":"230","messageId":"231","endLine":2,"endColumn":23},{"ruleId":"228","severity":1,"message":"256","line":2,"column":25,"nodeType":"230","messageId":"231","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"257","line":2,"column":31,"nodeType":"230","messageId":"231","endLine":2,"endColumn":34},{"ruleId":"222","severity":1,"message":"223","line":12,"column":15,"nodeType":"224","endLine":15,"endColumn":6},{"ruleId":"228","severity":1,"message":"246","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"258","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":13},{"ruleId":"228","severity":1,"message":"259","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"260","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":13},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["263"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'isOnDesktop' is assigned a value but never used.","'game' is assigned a value but never used.","'isExist' is assigned a value but never used.","'isCheckClicked' is assigned a value but never used.","'tempObj' is assigned a value but never used.","'currCountry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'dispatch', 'falseAll', 'history', 'isSoundOn', 'isTimeLevelOn', 'selectedLevel', and 'tunesArr'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedSound' needs the current value of 'tunesArr'.",["264"],"'lang' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'level' is assigned a value but never used.","'Component' is defined but never used.","'points' is assigned a value but never used.",["261"],["262"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["265"],"'states' is assigned a value but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","'Pie' is defined but never used.","'clock' is defined but never used.","'finish' is defined but never used.","'round' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"266","fix":"270"},"Update the dependencies array to be: [dispatch, history]",{"range":"271","text":"272"},"Update the dependencies array to be: [data, dispatch, falseAll, history, isSoundOn, isTimeLevelOn, selectedLevel, tunesArr]",{"range":"273","text":"274"},{"range":"275","text":"272"},[2261,2263],"[dispatch, history]",[8093,8095],"[data, dispatch, falseAll, history, isSoundOn, isTimeLevelOn, selectedLevel, tunesArr]",[1083,1085]]