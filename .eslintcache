[{"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js":"1","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx":"2","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js":"4","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx":"5","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx":"6","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx":"7","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx":"8","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx":"9","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js":"10","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js":"11","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js":"12","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js":"13","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js":"14","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx":"15","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js":"16","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js":"17","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx":"18","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx":"19","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx":"20","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\itemService.js":"21","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx":"22","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx":"23","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx":"24","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx":"25","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx":"26","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx":"27","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx":"28","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx":"29","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx":"30","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx":"31","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx":"32","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js":"33","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\httpService.js":"34","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\dataReducer.js":"35","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\dataAction.js":"36","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\dataService.js":"37","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\LoadCycle.jsx":"38","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\session-storage.js":"39","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\AboutMe.jsx":"40"},{"size":995,"mtime":1626128284564,"results":"41","hashOfConfig":"42"},{"size":2775,"mtime":1626767108014,"results":"43","hashOfConfig":"42"},{"size":364,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":5064,"mtime":499162500000,"results":"45","hashOfConfig":"42"},{"size":6209,"mtime":1625955937860,"results":"46","hashOfConfig":"42"},{"size":15165,"mtime":1625957325254,"results":"47","hashOfConfig":"42"},{"size":1190,"mtime":1626766399938,"results":"48","hashOfConfig":"42"},{"size":1195,"mtime":1624258514557,"results":"49","hashOfConfig":"42"},{"size":9519,"mtime":1626768436062,"results":"50","hashOfConfig":"42"},{"size":640,"mtime":1626767910595,"results":"51","hashOfConfig":"42"},{"size":235,"mtime":1608723174900,"results":"52","hashOfConfig":"42"},{"size":16492,"mtime":1626723272043,"results":"53","hashOfConfig":"42"},{"size":3365,"mtime":1626768043390,"results":"54","hashOfConfig":"42"},{"size":265,"mtime":1621353790120,"results":"55","hashOfConfig":"42"},{"size":17193,"mtime":1626767416341,"results":"56","hashOfConfig":"42"},{"size":4464,"mtime":1626768009845,"results":"57","hashOfConfig":"42"},{"size":11905,"mtime":1626734238523,"results":"58","hashOfConfig":"42"},{"size":14875,"mtime":1625502229049,"results":"59","hashOfConfig":"42"},{"size":18889,"mtime":1626768421961,"results":"60","hashOfConfig":"42"},{"size":4187,"mtime":1626730986762,"results":"61","hashOfConfig":"42"},{"size":446,"mtime":1623874105758,"results":"62","hashOfConfig":"42"},{"size":1900,"mtime":1625960518754,"results":"63","hashOfConfig":"42"},{"size":2146,"mtime":1624921953761,"results":"64","hashOfConfig":"42"},{"size":581,"mtime":1621460404394,"results":"65","hashOfConfig":"42"},{"size":1355,"mtime":1623582901343,"results":"66","hashOfConfig":"42"},{"size":1236,"mtime":1626301185368,"results":"67","hashOfConfig":"42"},{"size":1026,"mtime":1625957805015,"results":"68","hashOfConfig":"42"},{"size":1023,"mtime":1625960621115,"results":"69","hashOfConfig":"42"},{"size":4497,"mtime":1626735202785,"results":"70","hashOfConfig":"42"},{"size":9728,"mtime":1625690789885,"results":"71","hashOfConfig":"42"},{"size":809,"mtime":1625960562177,"results":"72","hashOfConfig":"42"},{"size":1535,"mtime":1625957770598,"results":"73","hashOfConfig":"42"},{"size":454,"mtime":1624974391166,"results":"74","hashOfConfig":"42"},{"size":1079,"mtime":1623878732237,"results":"75","hashOfConfig":"42"},{"size":253,"mtime":1623791350173,"results":"76","hashOfConfig":"42"},{"size":354,"mtime":1623794048069,"results":"77","hashOfConfig":"42"},{"size":575,"mtime":1624974481168,"results":"78","hashOfConfig":"42"},{"size":232,"mtime":1625957267871,"results":"79","hashOfConfig":"42"},{"size":303,"mtime":1625154615320,"results":"80","hashOfConfig":"42"},{"size":1617,"mtime":1625960703281,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1qzk62e",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\index.js",[],["175","176"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\App.jsx",["177"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppHeader.jsx",["178","179"],"import React, {  useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\n\r\n//cmps:\r\nimport { Settings } from '../pages/Settings'\r\nimport { Logout } from './Logout'\r\nimport { Home } from '../pages/Home';\r\nimport { AboutMe } from '../pages/AboutMe'\r\n\r\n//imgs:\r\nimport avatarSrc from '../assets/imgs/user.png'\r\nimport logoSrc from '../assets/imgs/bookLogo.png'\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\n\r\n//icons:\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n//functions:\r\nimport { logout } from '../store/actions/userAction.js'\r\nimport { loadData } from '../store/actions/dataAction'\r\nimport { storageService } from '../services/session-storage'\r\n\r\n\r\nconst _AppHeader = ({ data, history, logout, loadData }) => {\r\n\r\n    const menuOptions= [{ txt: 'home', to: 'home' }, { txt: 'adding', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }, { txt: 'settings', to: 'settings' }, { txt: 'about', to: 'about' }, { txt: 'about me', to: 'me' }]\r\n\r\n    const [currUser, setCurrUser] = useState({})\r\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false)\r\n    const [isProfileOpen, setIsProfileOpen] = useState(false)\r\n    const [isAboutMeOpen, setIsAboutMeOpen] = useState(false)\r\n    const [className, setClassName] = useState(false)\r\n\r\n    const navForDisplay = () => {\r\n        const currUser = storageService.load('currUser')\r\n        return currUser?.game?.lang === 'English' ?\r\n            [{ txt: 'home', to: 'about' }, { txt: 'editor', to: 'adding' }, { txt: 'dashboard', to: 'dashboard' }]\r\n            : [{ txt: 'בית', to: 'about' }, { txt: 'עריכה', to: 'adding' }, { txt: 'סטטיסטיקה', to: 'dashboard' }]\r\n    }\r\n\r\n    useEffect(async () => {\r\n        await loadData()\r\n        const user = storageService.load('currUser')\r\n        if (!user?.nickname) history.push(\"/\")\r\n        setCurrUser({ ...user })\r\n    }, [])\r\n\r\n    const navOps = navForDisplay()\r\n    const { nickname, image, game } = currUser\r\n    var isEn = game?.lang === 'English' ? true : false\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"app-header pf\">\r\n                <div className=\"inner flex\">\r\n                    <div className=\"flex j-between\">\r\n                        <img src={logoSrc} alt=\"\" />\r\n                        <p>trinius</p>\r\n                    </div>\r\n                    <div className=\"wider-menu flex\">\r\n                        {navOps.map((o, idx) => <NavLink to={`/${o.to}`} exact={true} activeClassName=\"active-link\" key={idx}>{o.txt}</NavLink>)}\r\n                        <p id={`${isSettingsOpen ? 'settings' : ''}`} onClick={() => setIsSettingsOpen(!isSettingsOpen)}>{isEn ? 'Settings' : 'הגדרות'}<span><SettingsIcon /></span></p>\r\n                        <p style={{ width: '100%' }} onClick={() => setIsAboutMeOpen(!isAboutMeOpen)}>{isEn ? 'About Me' : 'מי אני'}<span><InfoIcon /></span></p>\r\n                        <Logout logout={logout} data={data} history={history} />\r\n                    </div>\r\n                    <MenuIcon id={`${className ? 'menu-icon' : ''}`} className=\"menu-icon pa\" onClick={() => setClassName(!className)} alt=\"\" />\r\n\r\n                    <div className=\"backImgs\">\r\n                        <img src={clock} alt=\"\" />\r\n                        <img src={round} alt=\"\" />\r\n                        <img src={finish} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <section id=\"app-menu\" className={`menu ${className ? 'open' : ''}`} onBlur={(ev) => {\r\n                    ev.stopPropagation()\r\n                    setClassName(false)\r\n                }}>\r\n                    <div className=\"little-profile\">\r\n                        <img src={image ? image?.src : avatarSrc} style={{ backgroundColor: image?.bgClr }} alt=\"\" className=\"flex\" />\r\n                        <p className=\"tac\">{nickname}</p>\r\n                    </div>\r\n                    <div className=\"menu-options flex column\">\r\n                        {menuOptions.map((o, idx) => <NavLink to={`/${o.to}`} onClick={() => setClassName(false)} exact={true} activeClassName=\"active-menu-link\" key={idx}>{o.txt}</NavLink>)}\r\n                        <img src={logoSrc} alt=\"\" />\r\n                    </div>\r\n                </section>\r\n\r\n            </header>\r\n\r\n            <section id=\"menu\" className={`settings-menu ${isSettingsOpen ? 'open' : ''}`}><Settings data={data} isOnDesktop={true} /></section>\r\n\r\n            <section className={`side-aboutMe ${isAboutMeOpen ? 'open' : ''}`}><AboutMe /></section>\r\n\r\n            <div className=\"left-area\">\r\n\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <img src={clock} alt=\"\" />\r\n                <img src={round} alt=\"\" />\r\n                <img src={finish} alt=\"\" />\r\n                <div className=\"profile flex a-center j-center pa ttc tac\" onClick={() => setIsProfileOpen(!isProfileOpen)}>\r\n                    <p>{isEn ? 'Your Profile' : 'פרופיל'}</p>\r\n                    <ArrowRightIcon />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`back-dark ${isProfileOpen ? 'shown' : ''}`}> </div>\r\n            <div className={`profile-div ${isProfileOpen ? 'open' : ''}`}>  <Home data={data} isOnDesktop={true} /></div>\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    logout\r\n}\r\nexport const AppHeader = withRouter(connect(mapStateToProps, mapDispatchToProps)(_AppHeader));","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Home.jsx",["180","181","182"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n//functions:\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { updateNickname, updateUserImage } from '../store/actions/userAction.js'\r\nimport { updateCountry } from '../store/actions/gameAction.js'\r\n\r\nimport avatarSrc from '../assets/imgs/user.png'\r\n\r\nimport a01 from '../assets/imgs/avatars/avatar-01.png'\r\nimport a02 from '../assets/imgs/avatars/avatar-02.png'\r\nimport a03 from '../assets/imgs/avatars/avatar-03.png'\r\nimport a04 from '../assets/imgs/avatars/avatar-04.png'\r\nimport a05 from '../assets/imgs/avatars/avatar-05.png'\r\nimport a06 from '../assets/imgs/avatars/avatar-06.png'\r\nimport a07 from '../assets/imgs/avatars/avatar-07.png'\r\nimport a08 from '../assets/imgs/avatars/avatar-08.png'\r\nimport a09 from '../assets/imgs/avatars/avatar-09.png'\r\nimport a10 from '../assets/imgs/avatars/avatar-10.png'\r\nimport a11 from '../assets/imgs/avatars/avatar-11.png'\r\nimport a12 from '../assets/imgs/avatars/avatar-12.png'\r\nimport a13 from '../assets/imgs/avatars/avatar-13.png'\r\nimport a14 from '../assets/imgs/avatars/avatar-14.png'\r\nimport a15 from '../assets/imgs/avatars/avatar-15.png'\r\nimport a16 from '../assets/imgs/avatars/avatar-16.png'\r\nimport a17 from '../assets/imgs/avatars/avatar-17.png'\r\nimport a18 from '../assets/imgs/avatars/avatar-18.png'\r\nimport a19 from '../assets/imgs/avatars/avatar-19.png'\r\nimport a20 from '../assets/imgs/avatars/avatar-20.png'\r\nimport a21 from '../assets/imgs/avatars/avatar-21.png'\r\nimport a22 from '../assets/imgs/avatars/avatar-22.png'\r\nimport a23 from '../assets/imgs/avatars/avatar-23.png'\r\nimport a24 from '../assets/imgs/avatars/avatar-24.png'\r\nimport a25 from '../assets/imgs/avatars/avatar-25.png'\r\nimport a26 from '../assets/imgs/avatars/avatar-26.png'\r\nimport a27 from '../assets/imgs/avatars/avatar-27.png'\r\nimport a28 from '../assets/imgs/avatars/avatar-28.png'\r\nimport a29 from '../assets/imgs/avatars/avatar-29.png'\r\nimport a30 from '../assets/imgs/avatars/avatar-30.png'\r\nimport a31 from '../assets/imgs/avatars/avatar-31.png'\r\nimport a32 from '../assets/imgs/avatars/avatar-32.png'\r\nimport a33 from '../assets/imgs/avatars/avatar-33.png'\r\nimport a34 from '../assets/imgs/avatars/avatar-34.png'\r\nimport a35 from '../assets/imgs/avatars/avatar-35.png'\r\nimport a36 from '../assets/imgs/avatars/avatar-36.png'\r\nimport a37 from '../assets/imgs/avatars/avatar-37.png'\r\nimport a38 from '../assets/imgs/avatars/avatar-38.png'\r\nimport a39 from '../assets/imgs/avatars/avatar-39.png'\r\nimport a40 from '../assets/imgs/avatars/avatar-40.png'\r\nimport a41 from '../assets/imgs/avatars/avatar-41.png'\r\nimport a42 from '../assets/imgs/avatars/avatar-42.png'\r\nimport a43 from '../assets/imgs/avatars/avatar-43.png'\r\nimport a44 from '../assets/imgs/avatars/avatar-44.png'\r\nimport a45 from '../assets/imgs/avatars/avatar-45.png'\r\nimport a46 from '../assets/imgs/avatars/avatar-46.png'\r\nimport a47 from '../assets/imgs/avatars/avatar-47.png'\r\nimport a48 from '../assets/imgs/avatars/avatar-48.png'\r\nimport a49 from '../assets/imgs/avatars/avatar-49.png'\r\nimport a50 from '../assets/imgs/avatars/avatar-50.png'\r\nimport a51 from '../assets/imgs/avatars/avatar-51.png'\r\nimport a52 from '../assets/imgs/avatars/avatar-52.png'\r\nimport a53 from '../assets/imgs/avatars/avatar-53.png'\r\nimport a54 from '../assets/imgs/avatars/avatar-54.png'\r\nimport a55 from '../assets/imgs/avatars/avatar-55.png'\r\nimport a56 from '../assets/imgs/avatars/avatar-56.png'\r\nimport a57 from '../assets/imgs/avatars/avatar-57.png'\r\nimport a58 from '../assets/imgs/avatars/avatar-58.png'\r\nimport a59 from '../assets/imgs/avatars/avatar-59.png'\r\nimport a60 from '../assets/imgs/avatars/avatar-60.png'\r\n\r\n\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport PhotoCameraOutlinedIcon from '@material-ui/icons/PhotoCameraOutlined';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport StarsRoundedIcon from '@material-ui/icons/StarsRounded';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\n//cmps:\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx'\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        currUser: {},\r\n        isLoadingImage: true,\r\n        isEditClicked: false,\r\n        nickname: '',\r\n        countryFilter: '',\r\n        currImg: { src: '', bgClr: '' },\r\n        countryClass: \"choose-country flex tac\",\r\n        cc: 'countries-div',\r\n        dc: 'div',\r\n        pc: 'p',\r\n        countriesOpsClass: 'countries-options grid',\r\n        isSelectImgClicked: false,\r\n        currCountry: 'Brazil',\r\n        imgsUrl: [a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60],\r\n        imgsClr: ['antiquewhite', 'cadetblue', '#7bf9adfc', '#d4ff7c', '#85a4bd', '#8c8c8c', '#63a14e', '#656f77', '#a58765', '#4e4b48', '#365041fc', '#7a3131', '#9c9c27', '#79d3de'],\r\n        countries: [\r\n            ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA'],\r\n            ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'גנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית']\r\n        ],\r\n        isChooseCountryClicked: false,\r\n        isCountryChosen: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data, history, isOnDesktop } = this.props\r\n        await this.props.loadData()\r\n        const currUser = storageService.load('currUser')\r\n        const { nickname, image, game } = currUser\r\n        if (!nickname) history.push(\"/\")\r\n\r\n        let { imgsUrl, imgsClr } = this.state\r\n        imgsUrl = imgsUrl.map(s => s = { src: s, bgClr: imgsClr[Math.floor(Math.random() * 14)] })\r\n        this.setState({\r\n            nickname: nickname,\r\n            isSelectImgClicked: image.src.slice(14, 15) === 'u' ? true : false,\r\n            imgsUrl,\r\n            currCountry: game.country,\r\n            currImg: image,\r\n            currUser\r\n        })\r\n        setTimeout(() => this.setState({ isLoadingImage: false }), 500)\r\n    }\r\n\r\n    handleChange = ({ target }) => this.setState({ nickname: target.value })\r\n    handleCountryChange = ({ target }) => this.setState({ countryFilter: target.value })\r\n\r\n    selectImg = async (ev, imgSrc) => {\r\n        ev.preventDefault()\r\n        this.setState({ isSelectImgClicked: false, currImg: imgSrc })\r\n        const { data } = this.props\r\n        await this.props.updateUserImage(data, this.state.currUser, imgSrc)\r\n    }\r\n\r\n    onUpdateCountry = async (ev, c) => {\r\n        const { data } = this.props\r\n        ev.preventDefault()\r\n        this.setState({ currCountry: c })\r\n        await this.props.updateCountry(data, this.state.currUser, c)\r\n    }\r\n\r\n    get countriesForDisplay() {\r\n        let { countries, countryFilter, currUser } = this.state\r\n        var currCountriesArr = countries[currUser?.game?.lang === 'English' ? 0 : 1]\r\n        currCountriesArr = currCountriesArr.filter(c => c.includes(countryFilter))\r\n        return currCountriesArr\r\n    }\r\n\r\n    txtObj = (v) => v ? {\r\n        about: 'ABOUT',\r\n        placeholder: 'A Capital Letter...',\r\n        points: 'Points',\r\n        avatar: 'SELECT YOUR AVATAR',\r\n        play: 'Play'\r\n    } : {\r\n        about: '',\r\n        placeholder: 'חפש/י מדינה...',\r\n        points: 'נקודות',\r\n        avatar: 'בחר/י תמונה',\r\n        play: 'שחק/י'\r\n    }\r\n\r\n    render() {\r\n        const { currUser, isLoadingImage, imgsUrl, isEditClicked, nickname, currImg, isSelectImgClicked, countryFilter, currCountry, countryClass, isChooseCountryClicked, cc, dc, pc, countriesOpsClass } = this.state\r\n        const { isOnDesktop, data } = this.props\r\n        const { pointsObj, image, game } = currUser\r\n        var isEn = currUser?.game?.lang === 'English' ? true : false\r\n        const countries = this.countriesForDisplay\r\n        const txtObj = this.txtObj(isEn)\r\n        if (!this.state || !currUser) return <LoadCycle width=\"30%\" height=\"30%\" top=\"30%\"/>\r\n        return (\r\n            <section className=\"home-container main-layout pf\">\r\n                <div className={countryClass}>\r\n                    <small>{txtObj.about}</small>\r\n                    <small className=\"flex a-center j-center\">{currCountry}</small>\r\n                    <SwapHorizIcon style={{ display: isChooseCountryClicked ? 'none' : 'flex' }} onClick={() => {\r\n                        this.setState({ isChooseCountryClicked: true, countryClass: 'choose-country flex tac wide' })\r\n                        setTimeout(() => {\r\n                            this.setState({ cc: 'countries-div open' })\r\n                        }, 300);\r\n                        setTimeout(() => {\r\n                            this.setState({ dc: 'div shown', pc: 'p shown', countriesOpsClass: 'countries-options grid shown' })\r\n                        }, 600);\r\n                    }} />\r\n                    <div className={cc}>\r\n                        <header>\r\n                            <div className={dc} style={{ direction: isEn ? 'ltr' : 'rtl' }}>\r\n                                <input type=\"text\" placeholder={txtObj.placeholder} value={countryFilter} onChange={this.handleCountryChange} />\r\n                                <SearchRoundedIcon style={{ display: isEn ? 'block' : 'none' }} />\r\n                            </div>\r\n                            <p className={pc}>{currCountry}</p>\r\n                            <CloseRoundedIcon onClick={() => {\r\n                                this.setState({ countryClass: 'choose-country flex tac close', countriesOpsClass: 'countries-options grid', dc: 'div', pc: 'p' })\r\n                                setTimeout(() => {\r\n                                    this.setState({ countryClass: 'choose-country flex tac' })\r\n                                }, 500);\r\n                                setTimeout(() => {\r\n                                    this.setState({ isChooseCountryClicked: false })\r\n                                }, 1000);\r\n                            }} />\r\n                        </header>\r\n                        <div className={countriesOpsClass}>\r\n                            {countries.map((c, idx) => <div key={idx} style={{ color: !isOnDesktop ? currCountry === c ? 'black' : '' : currCountry === c ? 'white' : '' }} onClick={(ev) => this.onUpdateCountry(ev, c)}>\r\n                                <FiberManualRecordIcon />\r\n                                <p style={{ fontSize: c.length >= 10 ? 'smaller' : 'inherit' }}>{c}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {!isEditClicked && <div className=\"avatar flex j-evenly ma\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <p>{nickname}</p>\r\n                    <CreateOutlinedIcon onClick={() => this.setState({ isEditClicked: !isEditClicked })} />\r\n                </div>}\r\n                {isEditClicked && <div className=\"edit-name pa left-trans a-center\">\r\n                    <input type=\"text\" required placeholder={nickname} value={nickname} onChange={this.handleChange} autoFocus=\"on\" autoComplete=\"off\" className=\"tac\" />\r\n                    <CheckIcon onClick={() => {\r\n                        this.setState({ isEditClicked: nickname ? false : true }, () => {\r\n                            if (this.state.nickname) this.props.updateNickname(data, currUser, nickname)\r\n                        })\r\n\r\n                    }} />\r\n                </div>}\r\n\r\n                {isLoadingImage && <LoadCycle width=\"40%\" height=\"20%\" top=\"40%\" />}\r\n                {!isLoadingImage && <div className=\"image flex j-center pa left-trans\" style={{ display: isChooseCountryClicked && !isOnDesktop ? 'none' : 'flex' }}>\r\n                    <span className=\"uploadFComputer\"><PhotoCameraOutlinedIcon onClick={() => this.setState({ isSelectImgClicked: !isSelectImgClicked })} /></span>\r\n                    {!image.src && <img src={avatarSrc} alt=\"\" />}\r\n                    {image.src && <img src={currImg.src} alt=\"\" className=\"chosen-img\" style={{ backgroundColor: currImg.bgClr }} />}\r\n                    {currUser && <span className=\"first-letter-avatar flex a-center j-center\"><small>{currUser.nickname?.slice(0, 1).toUpperCase()}</small></span>}\r\n                </div>}\r\n\r\n                <section className=\"score-section flex j-between a-center pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>\r\n                    <span><StarsRoundedIcon /></span>\r\n                    <div className=\"score tac\">\r\n                        <p>{txtObj.points}</p>\r\n                        <p>{pointsObj?.fullPoints}</p>\r\n                    </div>\r\n                    <span><StarsRoundedIcon /></span>\r\n                </section>\r\n\r\n                <Link to=\"/play\"><div className=\"playing tac pa\" style={{ opacity: isChooseCountryClicked ? '0.2' : '1' }}>{txtObj.play}</div></Link>\r\n\r\n                <section className={`imgs-section grid ${isSelectImgClicked ? 'open' : ''}`} style={{ display: !isChooseCountryClicked || isOnDesktop ? 'grid' : 'none' }}>\r\n                    <header className=\"flex j-between ma\">\r\n                        <p className=\"ma\">{txtObj.avatar}</p>\r\n                        <CloseRoundedIcon onClick={() => this.setState({ isSelectImgClicked: false, className: 'imgs-section grid' })} className=\"ma\" />\r\n                    </header>\r\n                    <div className=\"options grid pr\">\r\n                        {imgsUrl.map((src, idx) => <div key={idx} onClick={(ev) => this.selectImg(ev, src)} style={{ backgroundColor: src.bgClr }}><img src={src.src} alt=\"\" /></div>)}\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    updateNickname,\r\n    updateUserImage,\r\n    updateCountry\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\About.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\AppNav.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\SignUp.jsx",["183","184"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\storage-service.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\userService.js",["185"],"import { httpService } from './httpService.js'\r\nimport { storageService } from './session-storage.js'\r\n// import { storageService } from './storage-service.js'\r\n\r\n// const KEY_DATA = 'dataDB'\r\n\r\n// var { data } = require('../data/db.json')\r\n\r\nexport const userService = {\r\n    // loadUser,\r\n    updateUser,\r\n    updateNickname,\r\n    updateImgSrc,\r\n    updatePointsObj,\r\n    addQuestion,\r\n    checkExisting,\r\n    createUser,\r\n    resetPoints,\r\n    makeId\r\n}\r\n// async function loadUser() {\r\n//     try {\r\n//         var { data } = await httpService.get('/trinius')\r\n//         console.log(data);\r\n//         // if (!data) httpService.post('/trinius', data)\r\n//         return data.user\r\n//     } catch (err) {\r\n//         console.log('err in userService in loadUser:', err);\r\n//     }\r\n// }\r\n\r\nasync function updateUser(data, user) {\r\n    try {\r\n        console.log('user.game',user.game);\r\n        const userIdx = data.users.findIndex(u => u._id === user._id)\r\n        data.users[userIdx] = user\r\n        const updatedData = { ...data }\r\n        httpService.put('/trinius/' + updatedData._id, updatedData)\r\n        storageService.save('currUser', user)\r\n    } catch (err) {\r\n        console.log('err in userService in updateUser:', err);\r\n    }\r\n}\r\n\r\nasync function updateNickname(user, nickname) {\r\n    try {\r\n        const updatedUser = { ...user, nickname }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in updateNickname:', err);\r\n    }\r\n}\r\n\r\n\r\nasync function updateImgSrc(user, image) {\r\n    try {\r\n        const updatedUser = { ...user, image }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in setUserImage:', err);\r\n    }\r\n}\r\n\r\nasync function updatePointsObj(user, obj) {\r\n    try {\r\n        const updatedUser = { ...user, pointsObj: { ...obj } }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in userService in updatePointsObj:', err);\r\n    }\r\n}\r\n\r\nasync function addQuestion(user, obj) {\r\n    try {\r\n        var { objectsArray } = user\r\n        if (objectsArray.length) objectsArray.push(obj)\r\n        else objectsArray = [obj]\r\n        const updatedUser = { ...user, objectsArray }\r\n        return updatedUser\r\n    } catch (err) {\r\n        console.log('err in itemService in addQuestion:', err);\r\n    }\r\n}\r\n\r\nasync function checkExisting(data, userLittleObj) {\r\n    try {\r\n        const { nickname, password } = userLittleObj\r\n        const { users } = data\r\n        var index = users.findIndex(user => user.password === password && user.nickname === nickname)\r\n        if (index >= 0) {\r\n            storageService.clear()\r\n            storageService.save('currUser', data.users[index])\r\n        }\r\n        return index\r\n    } catch (err) {\r\n        console.log('err in userService in checkExisting:', err);\r\n    }\r\n}\r\n\r\nasync function createUser(data, newUserLittleObj) {\r\n    const { newName, newPass } = newUserLittleObj\r\n    try {\r\n        const newUser = {\r\n            _id: await makeId(),\r\n            nickname: newName,\r\n            password: newPass,\r\n            pointsObj: {\r\n                categories: {\r\n                    nature: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    geography: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    animals: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    personalities: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    movies: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    medicine: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    food: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    sports: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    music: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    science: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    technology: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    }\r\n                },\r\n                countries: {\r\n                    Argentina: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Australia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Austria: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Belgium: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Brazil: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Canada: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    China: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Colombia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Denmark: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    England: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Ethiopia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Finland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    France: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Germany: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    India: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Israel: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Italy: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Japan: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Mexico: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Morocco: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Philippines: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Poland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Portugal: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Romania: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Russia: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Spain: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Sweden: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Switzerland: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Thailand: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    Ukraine: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    },\r\n                    USA: {\r\n                        E: 0,\r\n                        M: 0,\r\n                        H: 0\r\n                    }\r\n                },\r\n                fullPoints: 10\r\n\r\n            },\r\n            image: {\r\n                src: newUserLittleObj.imageUrl ? newUserLittleObj.imageUrl : '/static/media/user.579e0088.png',\r\n                bgClr: '#ff955a'\r\n            },\r\n            objectsArray: [],\r\n            game: {\r\n                soundObj: {\r\n                    soundStatus: false,\r\n                    sound: {\r\n                        s: \"/static/media/01.8cf4fc9e.mp3\",\r\n                        n: \"Art of silence\",\r\n                        isPlaying: false\r\n                    }\r\n                },\r\n                timeObj: {\r\n                    timeStatus: false,\r\n                    time: 60\r\n                },\r\n                category: {\r\n                    name: \"PERSONALITIES\",\r\n                    src: \"/static/media/personalities-c.8d940b01.png\"\r\n                },\r\n                country: \"USA\",\r\n                lang: \"English\",\r\n                level: {\r\n                    n: \"E\",\r\n                    c: \"#ff9800\"\r\n                },\r\n                roundIdx: 0,\r\n                useQ: false\r\n            }\r\n        }\r\n        storageService.clear()\r\n        storageService.save('currUser', newUser)\r\n        const newUsers = [...data.users, newUser]\r\n        const updatedData = { ...data, users: newUsers }\r\n        return updatedData\r\n        // httpService.post('/trinius', updatedData)\r\n    } catch (err) {\r\n        console.log('err in userService in createUser:', err);\r\n    }\r\n}\r\n\r\nfunction resetPoints(data, currUser) {\r\n    const { users } = data\r\n    var index = users.findIndex(user => user._id === currUser._id)\r\n    var { categories, countries } = currUser\r\n    var tempObj = { ...categories, ...countries }\r\n    // var updatedObj = {\r\n    //     // ...tempObj.map(c => c = {\r\n    //     //     \"E\": 0,\r\n    //     //     \"M\": 0,\r\n    //     //     \"H\": 0\r\n    //     // }),\r\n    //     // fullPoints: 10\r\n    // }\r\n    var updatedObj = {\r\n        categories: {\r\n            nature: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            geography: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            animals: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            personalities: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            movies: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            medicine: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            food: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            sports: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            music: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            science: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            technology: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            }\r\n        },\r\n        countries: {\r\n            Argentina: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Australia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Austria: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Belgium: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Brazil: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Canada: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            China: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Colombia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Denmark: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            England: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Ethiopia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Finland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            France: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Germany: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            India: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Israel: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Italy: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Japan: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Mexico: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Morocco: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Philippines: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Poland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Portugal: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Romania: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Russia: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Spain: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Sweden: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Switzerland: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Thailand: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            Ukraine: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            },\r\n            USA: {\r\n                E: 0,\r\n                M: 0,\r\n                H: 0\r\n            }\r\n        },\r\n        fullPoints: 10\r\n\r\n    }\r\n    users[index].pointsObj = updatedObj\r\n    const updatedData = { ...data, users }\r\n    return updatedData\r\n}\r\n\r\nasync function makeId(length = 10) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\userAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\userReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Settings.jsx",["186","187","188","189","190","191"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\gameAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\gameService.js",["192","193"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Adding.jsx",["194"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n//icons:\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport AssessmentRoundedIcon from '@material-ui/icons/AssessmentRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n//functions:\r\nimport { addQuestion } from '../store/actions/userAction.js'\r\nimport { loadData } from '../store/actions/dataAction.js';\r\n\r\n//imgs:\r\nimport incomplete from '../assets/imgs/incomplete.png'\r\nimport { gameService } from '../services/gameService.js';\r\nimport { LoadCycle } from '../cmps/LoadCycle.jsx';\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\nclass _Adding extends Component {\r\n\r\n    state = {\r\n        currUser: {},\r\n        optional: [\r\n            { txt: 'Write your question', min: 10, max: 120, name: 'q', value: '' },\r\n            { txt: 'The correct answer', min: 1, max: 30, name: 'correctAns', value: '' },\r\n            { txt: 'Wrong answer 1', min: 1, max: 30, name: 'wrong1', value: '' },\r\n            { txt: 'Wrong answer 2', min: 1, max: 30, name: 'wrong2', value: '' },\r\n            { txt: 'Wrong answer 3', min: 1, max: 30, name: 'wrong3', value: '' }\r\n        ],\r\n        tf: [\r\n            { txt: 'Write your statement', min: 10, max: 120, name: 'q', value: '' },\r\n            { correct: '' },\r\n            { fillTxt: 'True', c: '#47bd47d1', lightC: '#1bb81b57' },\r\n            { fillTxt: 'False', c: '#ff3737c2', lightC: '#ff000029' }\r\n        ],\r\n        isOptional: false,\r\n        isTF: true,\r\n        currArray: [],\r\n        cArr: [\r\n            {\r\n                txt: 'Categories',\r\n                isOpen: false,\r\n                arr: ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology']\r\n            },\r\n            {\r\n                txt: 'Countries',\r\n                isOpen: false,\r\n                arr: ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA']\r\n            }\r\n        ],\r\n        currCArr: [],\r\n        levels: [\r\n            { n: 'E', c: '#ff9800', lightC: '#ff98002e' },\r\n            { n: 'M', c: '#FF5733', lightC: '#ff573324' },\r\n            { n: 'H', c: '#E92337', lightC: '#f0707d2b' }\r\n        ],\r\n        final: {\r\n            object: {\r\n                question: '',\r\n                correct_answer: '',\r\n                incorrect_answers: []\r\n            },\r\n            level: '',\r\n            c: ''\r\n        },\r\n        finalInArray: [],\r\n        isFinishClicked: false,\r\n        isAllCompolete: false,\r\n        isLoadingFinal: false,\r\n        isInappropriate: false,\r\n        isDone: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadData()\r\n        const { data, history } = this.props\r\n        const currUser = storageService.load('currUser')\r\n        this.setState({ currUser })\r\n        if (!currUser?.nickname) history.push(\"/\")\r\n        this.reUpdateCurrArray()\r\n    }\r\n\r\n    reUpdateCurrArray = () => {\r\n        let { isOptional, optional, tf } = this.state\r\n        this.setState({ currArray: isOptional ? optional : tf })\r\n    }\r\n\r\n    onChangeInput = ({ target }) => {\r\n        let { currArray } = this.state\r\n        let currInputIdx = currArray.findIndex(obj => obj.name === target.name)\r\n        currArray[currInputIdx].value = target.value\r\n        this.setState({ currArray })\r\n    }\r\n\r\n    chooseTF = (fillTxt) => {\r\n        let { tf } = this.state\r\n        tf[1].correct = fillTxt\r\n        this.setState({ tf })\r\n    }\r\n\r\n    toggleC = (idx) => {\r\n        let { cArr } = this.state\r\n        cArr[idx].isOpen = !cArr[idx].isOpen\r\n        this.setState({ cArr })\r\n    }\r\n\r\n    updateFinal = (value) => {\r\n        let { final } = this.state\r\n        if (value.length > 1) final.c = value\r\n        else final.level = value\r\n        this.setState({ final })\r\n    }\r\n\r\n    finish = (ev) => {\r\n        ev.preventDefault()\r\n        let { currArray, final, tf } = this.state\r\n        let finalObj = {\r\n            object: {\r\n                question: currArray[0].value,\r\n                correct_answer: currArray === tf ? currArray[1].correct : currArray[1].value,\r\n                incorrect_answers: currArray === tf ? currArray[1].correct === 'True' ? ['False'] : ['True'] : [currArray[2].value, currArray[3].value, currArray[4].value]\r\n            },\r\n            level: final.level,\r\n            c: final.c\r\n        }\r\n        this.setState({ final: finalObj, isFinishClicked: true }, () => this.setState({ isAllCompolete: this.checkComplete() }))\r\n    }\r\n\r\n    checkComplete = () => {\r\n        let { final } = this.state\r\n        let finalInArray = [final.level, final.c]\r\n        for (let key in final.object) {\r\n            if (typeof final.object[key] === 'object') final.object[key].forEach(v => finalInArray.push(v))\r\n            else finalInArray.push(final.object[key])\r\n        }\r\n        this.setState({ finalInArray })\r\n        var incomplete = finalInArray.some(value => value === '')\r\n        return !incomplete\r\n    }\r\n\r\n    get levelForDisplay() {\r\n        let { level } = this.state.final\r\n        switch (level) {\r\n            case 'E': return 'Easy'\r\n            case 'M': return 'Medium'\r\n            case 'H': return 'Hard'\r\n            default:\r\n                return 'Easy'\r\n        }\r\n    }\r\n\r\n    onUploadQuestion = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isLoadingFinal: true })\r\n        let isInappropriate = this.checkFinal()\r\n\r\n        setTimeout(async () => {\r\n            const { currUser, final } = this.state\r\n            if (!isInappropriate) {\r\n                await this.props.addQuestion(this.props.data, currUser, final)\r\n                setTimeout(() => this.clear(), 3000)\r\n            }\r\n            this.setState({ isLoadingFinal: false, isDone: true })\r\n        }, 2500)\r\n    }\r\n\r\n    clear = () => {\r\n        var clearedArr = []\r\n        this.state.currArray.forEach(obj => {\r\n            Object.keys(obj).forEach(k => {\r\n                if (k === \"value\" || k === \"correct\") obj[k] = ''\r\n            })\r\n            clearedArr.push(obj)\r\n        })\r\n        this.setState({\r\n            currArray: clearedArr,\r\n            final: {\r\n                object: {\r\n                    question: '',\r\n                    correct_answer: '',\r\n                    incorrect_answers: []\r\n                },\r\n                level: '',\r\n                c: ''\r\n            },\r\n            isDone: false,\r\n            isFinishClicked: false\r\n        })\r\n        this.reUpdateCurrArray()\r\n    }\r\n\r\n    checkFinal = () => {\r\n        let { finalInArray } = this.state\r\n        let inappropriateArr = ['Curse', 'Slot', 'Whore', 'bitch', 'Harassment', 'Harass', 'Whore', 'Fuck', 'Fucked', 'Fucking', 'Dumb', 'Retarded', 'Stinking', 'Dick', 'Shit']\r\n\r\n        const finalSplitted = []\r\n        const splitted = finalInArray.map(v => v.split(\" \"))\r\n        splitted.forEach(s => finalSplitted.push(...s))\r\n\r\n        var isInappropriate\r\n        var counter = 0\r\n        let isDuplicate = false\r\n\r\n        inappropriateArr.forEach(i => finalSplitted.forEach(f => {\r\n            if (f === i || f === i.toUpperCase() || f === i.toLowerCase()) counter++\r\n        }))\r\n        isDuplicate = finalInArray.some((f, idx) => finalInArray.indexOf(f) !== idx)\r\n        isInappropriate = counter === 0 && !isDuplicate ? false : true\r\n        this.setState({ isInappropriate })\r\n        return isInappropriate\r\n    }\r\n\r\n    txtForDisplay = () => gameService.setAddingTxt(this.state.currUser?.game?.lang)\r\n\r\n    render() {\r\n        const { optional, tf, isOptional, isTF, currArray, levels, final, isFinishClicked, isAllCompolete, isLoadingFinal, isInappropriate, isDone, cArr } = this.state\r\n        const sOrQ = this.props?.game?.lang === 'English' ? currArray === tf ? 'statement' : 'question' : currArray === tf ? 'קביעה' : 'שאלה'\r\n        const txt = this.txtForDisplay()\r\n        return (\r\n\r\n            <section className=\"adding pa\">\r\n                <header className=\"flex j-evenly\">\r\n                    <p onClick={() => this.setState({ isOptional: true, isTF: false, currArray: optional })} style={isOptional ? { color: 'black', fontWeight: 'bold', textShadow: '1px -1px 2px white' } : { color: 'white', fontWeight: 100 }}>{txt.add_mult}</p>\r\n                    <p onClick={() => this.setState({ isOptional: false, isTF: true, currArray: tf })} style={isTF ? { color: 'black', fontWeight: 'bold', textShadow: '1px -1px 2px white' } : { color: 'white', fontWeight: 100 }}>{txt.add_tf}</p>\r\n                </header>\r\n                <form >\r\n                    {currArray.map((obj, idx) => <div className={`add-${idx}`} key={idx}>\r\n                        <div className=\"top flex j-between\">\r\n                            {obj.txt && <p>{obj.txt}</p>}\r\n                            {obj.max && <p>{`${obj.min}/${obj.max}`}</p>}\r\n                        </div>\r\n                        {currArray[idx].name && <textarea placeholder={idx === 0 && currArray !== tf ? 'Is The...' : ''} minLength={currArray[idx].min} maxLength={currArray[idx].max} value={currArray[idx].value} name={currArray[idx].name} required autoComplete=\"off\" onChange={this.onChangeInput} />}\r\n                    </div>)}\r\n                    {currArray === tf && <div className=\"tf flex j-between\">\r\n                        {[tf[2], tf[3]].map((obj, idx) => <div style={currArray[1].correct !== obj.fillTxt ? { boxShadow: `0 5px 3px ${obj.lightC}`, color: 'white', backgroundColor: obj.c } : { border: '1px solid black', color: 'black', backgroundColor: obj.c }} key={idx} onClick={() => this.chooseTF(obj.fillTxt)}>\r\n                            <p>{obj.fillTxt}</p>\r\n                        </div>)}\r\n                        <p className=\"tf-desc pf ttc\">{txt.add_desc}</p>\r\n                    </div>}\r\n                    <div className=\"c-or-c\">\r\n                        {cArr.map((c, idx) => < div onClick={() => this.toggleC(idx)} key={idx}>\r\n                            <p>{c.txt}</p>\r\n                            <p className=\"selected\" style={{ color: '#ff7629', position: 'absolute' }}>{c.arr.includes(final.c) ? final.c : ''}</p>\r\n                            <div className=\"cClass\">\r\n                                {c.arr.map((val, idx) => <p onClick={() => this.updateFinal(val)} style={{ color: final.c === val ? '#ff7629' : '' }} key={idx}>{val}</p>)}\r\n                            </div>\r\n                        </div>)}\r\n                    </div>\r\n                    <div className=\"or tac ttc\" style={{ fontSize: 'x-large', marginTop: '1%' }}>{txt.add_or}</div>\r\n\r\n                    <div className=\"levels\">\r\n                        <p>{txt.add_choose_l}</p>\r\n                        <div className=\"flex j-between\">\r\n                            {levels.map((l, idx) => <div className=\"level flex j-center tac\" onClick={() => this.updateFinal(l.n)} key={idx} style={final.level === l.n ? { color: 'white', backgroundColor: l.c } : { color: l.c, boxShadow: '0 4px 2px' + l.lightC }}>\r\n                                <p>{l.n}</p>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={(ev) => this.finish(ev)} className=\"finish-btn flex tac\">\r\n                        <p className=\"ma\">{txt.add_finish}</p>\r\n                    </div>\r\n                </form>\r\n                <div className={`finish-modal ${isFinishClicked ? 'open' : ''}`} style={window.screen.height < 1000 ? { height: currArray === tf ? '85vw' : '50vh' } : {}}>\r\n                    <p>{txt.add_the + sOrQ}</p>\r\n                    {!isLoadingFinal && !isInappropriate && !isDone && <CloseRoundedIcon onClick={() => this.setState({ isFinishClicked: false, isLoadingFinal: false, isInappropriate: false })} />}\r\n                    <div className=\"incomplete flex column a-center pa\" style={{ display: isAllCompolete ? 'none' : 'flex' }}>\r\n                        <p>{txt.add_com + sOrQ}</p>\r\n                        <img src={incomplete} alt=\"\" />\r\n                    </div>\r\n                    {isAllCompolete && !isLoadingFinal && !isDone && <div>\r\n                        <div className=\"q\"><textarea readOnly value={final.object.question} /></div>\r\n                        <div className=\"answers grid\">\r\n                            {[final.object.correct_answer, ...final.object.incorrect_answers].map((ans, idx) => <div key={idx}>\r\n                                <textarea readOnly value={ans} style={{ border: idx === 0 ? '2px solid black' : '' }} />\r\n                            </div>)}\r\n                        </div>\r\n                        <div className=\"more flex j-between\">\r\n                            <p><BookRoundedIcon />{final.c}</p>\r\n                            <p>< AssessmentRoundedIcon />{this.levelForDisplay}</p>\r\n                        </div>\r\n                        <div className=\"submit flex a-center j-center pa\" style={{ marginTop: currArray === tf ? '1%' : '5%' }} onClick={(ev) => this.onUploadQuestion(ev)}>\r\n                            <p className=\"ma\">{txt.add_done}</p>\r\n                        </div>\r\n                    </div>}\r\n                    {isAllCompolete && isLoadingFinal && <div className=\"loading flex j-center\">\r\n                        <LoadCycle width=\"30%\" height=\"30%\" top=\"30%\" />\r\n                        <small>{`${txt.add_check + sOrQ}. ${txt.add_check_II}`}</small>\r\n                    </div>}\r\n                    {isDone && isInappropriate && <div className=\"inappropriate\">\r\n                        <p>{txt.add_sorry + sOrQ + txt.add_sorry_II}</p>\r\n                        <div className=\"flex j-center a-center ma\" onClick={() => this.setState({ isFinishClicked: false, isDone: false, isAllCompolete: false, isLoadingFinal: false, isInappropriate: false })}>{txt.add_fix}</div>\r\n                    </div>}\r\n                    {isDone && !isInappropriate && <div className=\"done tac pr\">\r\n                        <span>{txt.add_congrats}</span>\r\n                        {txt.add_the + sOrQ + ' ' + txt.add_congrats_III}\r\n                        <div className=\"success-checkmark flex j-center pa\"><CheckIcon /></div>\r\n                    </div>}\r\n                </div>\r\n            </section >\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData,\r\n    addQuestion,\r\n}\r\nexport const Adding = connect(mapStateToProps, mapDispatchToProps)(_Adding)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Playing.jsx",["195","196","197","198","199"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Category.jsx",["200"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\itemService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Timer.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundIsFinished.jsx",["201","202"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n// import styled, { keyframes } from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport wrong from '../assets/imgs/wrong.png'\r\n\r\n//icons:\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport DragHandleRoundedIcon from '@material-ui/icons/DragHandleRounded';\r\n\r\nexport function RoundIsFinished(props) {\r\n\r\n    const { currRound, className, children, roundIsFinished, correctCounter, points, countryQ, lang } = props\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <section className={className} style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif', direction: lang === 'English' ? 'ltr' : 'rtl' }}>\r\n            <header>\r\n                <Link to=\"/home\"><ArrowBackIosRoundedIcon /></Link>\r\n                <h2> {t('rFinish-r') +' '+(currRound + 1)}</h2>\r\n            </header>\r\n            <div className=\"points grid pa\">\r\n                <div>\r\n                    <p>{t('rFinish-rP')}</p>\r\n                    <p>{correctCounter * 10}</p>\r\n                </div>\r\n                <AddRoundedIcon />\r\n                <div>\r\n                    <p>{t('rFinish-cQ')}</p>\r\n                    <p>{countryQ ? 15 : ''}</p>\r\n                    <img src={wrong} alt=\"\" style={{ opacity: countryQ ? '0' : '1' }} />\r\n                </div>\r\n                <DragHandleRoundedIcon />\r\n                <div>\r\n                    <p>{t('rFinish-fP')}</p>\r\n                    <p style={{ fontSize: roundIsFinished ? '100%' : '0%' }}>{(correctCounter * 10) + (countryQ ? 15 : 0)} <span className=\"plus-span pa\">+</span> </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"round-status flex a-center pa\">\r\n                <span style={{ width: roundIsFinished ? `${correctCounter * 9.4}%` : '0' }}></span>\r\n                <p>{correctCounter}/10</p>\r\n            </div>\r\n            <div className=\"content tac\">\r\n                {children}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\ToggleWrapper.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\DynamicChildCmp.jsx",["203"],"import React, { Component } from 'react';\r\nimport { FinishCmpChild } from './FinishCmpChild';\r\nimport { RoundCmpChild } from './RoundCmpChild';\r\nimport { TimeCmpChild } from './TimeCmpChild';\r\n\r\nexport class DynamicChildCmp extends Component {\r\n\r\n    state = { passingContinue: '' }\r\n\r\n    componentDidMount = () => {\r\n        var propsForDisplay = this.propsForDisplay()\r\n        this.setState({ passingContinue: propsForDisplay.continue })\r\n    }\r\n\r\n    propsForDisplay() {\r\n        return { continue: this.props.continue }\r\n    }\r\n\r\n    render() {\r\n        const { passingContinue } = this.state\r\n        const { roundFinishObj, isCategoryFinished,lang } = this.props\r\n        if (!roundFinishObj.status) return <h1></h1>\r\n        else\r\n            switch (roundFinishObj?.status) {\r\n                case 'round':\r\n                    return <RoundCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'time':\r\n                    return <TimeCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} />\r\n                case 'finish':\r\n                    return <FinishCmpChild lang={lang} continue={passingContinue} roundFinishObj={roundFinishObj} isCategoryFinished={isCategoryFinished} />\r\n                default:\r\n                    return null\r\n            }\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\FinishCmpChild.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\RoundCmpChild.jsx",["204"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport backImg from '../assets/imgs/round.png'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport function RoundCmpChild(props) {\r\n    const { roundFinishObj } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"roundCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" onClick={async () => await props.continue(false, roundFinishObj?.status)} className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(true, roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\TimeCmpChild.jsx",["205"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport backImg from '../assets/imgs/time.png'\r\n\r\nexport function TimeCmpChild(props) {\r\n    const { roundFinishObj } = props\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className=\"timeCmp child\">\r\n            <img src={backImg} alt=\"\" />\r\n            <div className=\"bless\">\r\n                <h1>{roundFinishObj?.largeTxt}</h1>\r\n                <h4> {roundFinishObj?.littleTxt}</h4>\r\n            </div>\r\n            <div className=\"btns-div\">\r\n                <Link to=\"/dashboard\" onClick={async () => await props.continue(false, roundFinishObj?.status)} className=\"btn-div\"><div><p>{t('status')}</p></div></Link>\r\n                <div className=\"btn-div\" onClick={async () => await props.continue(true, roundFinishObj?.status)}>\r\n                    <p>{roundFinishObj?.continueTxt}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\Dashboard.jsx",["206"],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatCmp.jsx",["207"],"import React, { Component } from 'react';\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//states:\r\nimport argentina from '../assets/flags/argentina.png'\r\nimport australia from '../assets/flags/australia.png'\r\nimport austria from '../assets/flags/austria.png'\r\nimport belgium from '../assets/flags/belgium.png'\r\nimport brazil from '../assets/flags/brazil.png'\r\nimport canada from '../assets/flags/canada.png'\r\nimport china from '../assets/flags/china.png'\r\nimport colombia from '../assets/flags/colombia.png'\r\nimport denmark from '../assets/flags/denmark.png'\r\nimport england from '../assets/flags/england.png'\r\nimport ethiopia from '../assets/flags/ethiopia.png'\r\nimport finland from '../assets/flags/finland.png'\r\nimport france from '../assets/flags/france.png'\r\nimport germany from '../assets/flags/germany.png'\r\nimport india from '../assets/flags/india.png'\r\nimport israel from '../assets/flags/israel.png'\r\nimport italy from '../assets/flags/italy.png'\r\nimport japan from '../assets/flags/japan.png'\r\nimport mexico from '../assets/flags/mexico.png'\r\nimport morocco from '../assets/flags/morocco.png'\r\nimport philippines from '../assets/flags/philippines.png'\r\nimport poland from '../assets/flags/poland.png'\r\nimport portugal from '../assets/flags/portugal.png'\r\nimport romania from '../assets/flags/romania.png'\r\nimport russia from '../assets/flags/russia.png'\r\nimport spain from '../assets/flags/spain.png'\r\nimport sweden from '../assets/flags/sweden.png'\r\nimport switzerland from '../assets/flags/switzerland.png'\r\nimport thailand from '../assets/flags/thailand.png'\r\nimport ukraine from '../assets/flags/ukraine.png'\r\nimport usa from '../assets/flags/usa.png'\r\n\r\n//categories:\r\nimport nature from '../assets/imgs/categories/nature-c.png'\r\nimport animals from '../assets/imgs/categories/animals-c.png'\r\nimport food from '../assets/imgs/categories/food-c.png'\r\nimport geography from '../assets/imgs/categories/geography-c.png'\r\nimport medicine from '../assets/imgs/categories/medicine-c.png'\r\nimport movies from '../assets/imgs/categories/movies-c.png'\r\nimport personalities from '../assets/imgs/categories/personalities-c.png'\r\nimport science from '../assets/imgs/categories/science-c.png'\r\nimport music from '../assets/imgs/categories/music-c.png'\r\nimport technology from '../assets/imgs/categories/technology-c.png'\r\nimport sports from '../assets/imgs/categories/sports-c.png'\r\n\r\nimport { StatModal } from './StatModal';\r\n\r\nclass _StatCmp extends Component {\r\n\r\n    state = {\r\n        states: [\r\n            {\r\n                title: 'categories',\r\n                arr: [\r\n                    { s: nature, n: 'nature' }, { s: geography, n: 'geography' }, { s: animals, n: 'animals' }, { s: personalities, n: 'personalities' }, { s: movies, n: 'movies' }, { s: medicine, n: 'medicine' }, { s: food, n: 'food' }, { s: sports, n: 'sports' }, { s: music, n: 'music' }, { s: science, n: 'science' }, { s: technology, n: 'technology' }\r\n                ]\r\n            },\r\n            {\r\n                title: 'countries',\r\n                arr: [{ s: argentina, n: 'Argentina' }, { s: australia, n: 'Australia' }, { s: austria, n: 'Austria' }, { s: belgium, n: 'Belgium' }, { s: brazil, n: 'Brazil' }, { s: canada, n: 'Canada' }, { s: china, n: 'China' }, { s: colombia, n: 'Colombia' }, { s: denmark, n: 'Denmark' }, { s: england, n: 'England' }, { s: ethiopia, n: 'Ethiopia' }, { s: finland, n: 'Finland' }, { s: france, n: 'France' }, { s: germany, n: 'Germany' }, { s: india, n: 'India' }, { s: israel, n: 'Israel' }, { s: italy, n: 'Italy' }, { s: japan, n: 'Japan' }, { s: mexico, n: 'Mexico' }, { s: morocco, n: 'Morocco' }, { s: philippines, n: 'Philippines' }, { s: poland, n: 'Poland' }, { s: portugal, n: 'Portugal' }, { s: romania, n: 'Romania' }, { s: russia, n: 'Russia' }, { s: spain, n: 'Spain' }, { s: sweden, n: 'Sweden' }, { s: switzerland, n: 'Switzerland' }, { s: thailand, n: 'Thailand' }, { s: ukraine, n: 'Ukraine' }, { s: usa, n: 'USA' }]\r\n            }\r\n        ],\r\n        forTrans: [\r\n            ['טבע', 'גיאוגרפיה', 'בעלי חיים', 'אנשים', 'סרטים', 'רפואה', 'אוכל', 'ספורט', 'מוזיקה', 'מדע', 'טכנולוגיה'],\r\n            ['ארגנטינה', 'אוסטרליה', 'אוסטריה', 'בלגיה', 'ברזיל', 'קנדה', 'סין', 'קולומביה', 'גנמרק', 'אנגליה', 'אתיופיה', 'פינלנד', 'צרפת', 'גרמניה', 'הודו', 'ישראל', 'איטליה', 'יפן', 'מקסיקו', 'מרוקו', 'פיליפינים', 'פולין', 'פורטוגל', 'רומניה', 'רוסיה', 'ספרד', 'שוודיה', 'שווייץ', 'תאילנד', 'אוקראינה', 'ארצות הברית'],\r\n            ['nature', 'geography', 'animals', 'personalities', 'movies', 'medicine', 'food', 'sports', 'music', 'science', 'technology'],\r\n            ['Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Canada', 'China', 'Colombia', 'Denmark', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'India', 'Israel', 'Italy', 'Japan', 'Mexico', 'Morocco', 'Philippines', 'Poland', 'Portugal', 'Romania', 'Russia', 'Spain', 'Sweden', 'Switzerland', 'Thailand', 'Ukraine', 'USA']\r\n\r\n        ],\r\n        currVal: '',\r\n        isModalOpen: false,\r\n        currObj: '',\r\n        cData: '',\r\n        options: ''\r\n    }\r\n\r\n    get statesForDisplay() {\r\n        var { forTrans, states } = this.state\r\n        var { lang } = this.props.currUser.game\r\n\r\n        var transArr = []\r\n        let copyStates = states.slice()\r\n        copyStates.forEach((state, idx) => {\r\n            state.title = lang === 'English' ? idx === 0 ? 'categories' : 'countries' : idx === 0 ? 'קטגוריות' : 'ארצות'\r\n            state.arr.forEach((obj, index) => {\r\n                obj.n = lang === 'English' ? forTrans[idx === 0 ? 2 : 3][index] : forTrans[idx === 0 ? 0 : 1][index]\r\n            })\r\n            transArr.push(state)\r\n        })\r\n\r\n        return transArr\r\n\r\n    }\r\n\r\n    openModal = (index, c, title, idx) => {\r\n        const { lang } = this.props.currUser?.game\r\n        this.setState({ isModalOpen: true, currVal: title })\r\n        this.getLevelsPoints(this.getCurrObj(this.transC(index, c, idx, lang), this.transT(index)))\r\n    }\r\n\r\n    transC = (index, c, idx, lang) => {\r\n        const { forTrans } = this.state\r\n        return lang === 'English' ? c : forTrans[index === 0 ? 2 : 3][idx]\r\n    }\r\n\r\n    transT = (index) => index === 0 ? \"categories\" : \"countries\"\r\n\r\n    getCurrObj = (n, title) => {\r\n        return this.props.pointsObj[title][n]\r\n    }\r\n    getMaxForDispaly = () => this.state.currVal === \"categories\" || \"קטגוריות\" ? 900 : 150\r\n\r\n    getLevelsPoints = (currObj) => {\r\n        var isEn = this.props.currUser.game.lang === 'English' ? true : false\r\n        this.setState({ currObj }, () => {\r\n            const colors = ['rgb(255, 152, 0,0.7)', 'rgb(255,87,51,0.9)', 'rgb(233, 35, 55,0.9)']\r\n            const cData = {\r\n                labels: isEn ? ['Easy', 'Medium', 'Hard'] : ['קל', 'בינוני', 'קשה'],\r\n                datasets: [{\r\n                    data: Object.values(this.state.currObj),\r\n                    label: isEn ? 'Points' : \"מס' נקודות\",\r\n                    backgroundColor: [...colors],\r\n                    hoverBackgroundColor: [...colors]\r\n                }]\r\n            }\r\n            const options = {\r\n                scales: {\r\n                    y: {\r\n                        suggestedMin: 0,\r\n                        suggestedMax: this.getMaxForDispaly()\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ cData, options })\r\n        })\r\n    }\r\n\r\n    onCloseModal = () => this.setState({ isModalOpen: false })\r\n\r\n\r\n    render() {\r\n        const { states, isModalOpen, cData, options } = this.state\r\n        const finalStates = this.statesForDisplay\r\n        const { lang } = this.props.currUser.game\r\n        var isEn = lang === 'English' ? true : false\r\n        return (\r\n            <section className=\"stat-cmp pa\" style={{ fontFamily: isEn ? 'montserrat' : 'sans-serif' }}>\r\n                <div className={`dark-div ${isModalOpen ? 'show' : ''}`}></div>\r\n                <h2>{isEn ? 'choose a type for its statistic' : 'בחר/י סוג קטגוריה'}</h2>\r\n                <section className=\"c-section flex column tac\" style={{ opacity: isModalOpen ? 0 : 1 }}>\r\n                    {finalStates?.map((s, index) => <div className=\"arr-div\" key={index}>\r\n                        <h3>{s.title}</h3>\r\n                        <div className=\"c-div flex\">\r\n                            {s.arr.map((c, idx) => <div onClick={() => this.openModal(index, c.n, s.title, idx)} className=\"c\" key={idx}>\r\n                                <img src={c.s} alt=\"\" />\r\n                                <p style={{ fontSize: c.n.length >= 8 ? 'small' : 'medium', bottom: '7%' }}>{c.n}</p>\r\n                            </div>)}\r\n                            <span className=\"c flex column\" style={{ opacity: 0 }}>\r\n                                <img src=\"\" alt=\"\" />\r\n                                <p></p>\r\n                            </span>\r\n                        </div>\r\n                    </div>)}\r\n                </section>\r\n                <StatModal lang={lang} className={`stat-modal ${isModalOpen ? 'show' : ''}`} data={cData} options={options} closeModal={this.onCloseModal} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataModule.data\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadData\r\n}\r\nexport const StatCmp = connect(mapStateToProps, mapDispatchToProps)(_StatCmp)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\StatModal.jsx",["208","209","210"],"import React from 'react';\r\nimport { Bar, Doughnut, Line, Pie } from 'react-chartjs-2'\r\nimport { useTranslation } from 'react-i18next'\r\n//icons:\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport function StatModal({ closeModal, className, data, options, currVal, lang }) {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <section className={className}>\r\n            <div className=\"pa flex j-between\">\r\n                <CloseRoundedIcon onClick={closeModal} />\r\n                <p>{currVal}</p>\r\n            </div>\r\n            <Bar data={data}\r\n                options={options}\r\n            />\r\n            <p style={{ fontFamily: lang === 'English' ? 'montserrat' : 'sans-serif' }}>{window.screen.height > 800 ? t('modal-desc'):''}</p>\r\n        </section>\r\n    );\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\Logout.jsx",["211","212"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { loadData } from '../store/actions/dataAction.js'\r\nimport { storageService } from '../services/session-storage.js';\r\n\r\n\r\nexport const _Logout = ({ loadData, logout, history }) => {\r\n\r\n    const [isEn, setIsEn] = useState(true)\r\n\r\n    useEffect(async () => {\r\n        await loadData()\r\n        const user = storageService.load('currUser')\r\n        setIsEn(user?.game?.lang === 'English' ? true : false)\r\n    }, [])\r\n\r\n    const doLogout = () => {\r\n        Swal.fire({\r\n            title: isEn ? 'Are Your Sure You Want To Log Out?' : '?בטוח',\r\n            showCancelButton: true,\r\n            focusCancel: true,\r\n            confirmButtonText: isEn ? 'Yes' : 'כן',\r\n            confirmButtonColor: '#ff955a',\r\n            reverseButtons: true,\r\n            allowOutsideClick: false,\r\n            cancelButtonText: isEn ? 'Cancel' : 'ביטול'\r\n        }).then(result => {\r\n            if (result.isConfirmed) {\r\n                logout()\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout a-center ttc j-center flex\" onClick={doLogout}>\r\n            <p>{`${isEn ? 'Log out' : 'התנתק/י'}`}<span><ExitToAppIcon /></span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadData\r\n}\r\nexport const Logout = connect(null, mapDispatchToProps)(_Logout)","D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\i18next.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\httpService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\reducers\\dataReducer.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\store\\actions\\dataAction.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\dataService.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\cmps\\LoadCycle.jsx",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\services\\session-storage.js",[],"D:\\עדינה\\coding academy\\frameworks\\React\\trivia\\frontend\\src\\pages\\AboutMe.jsx",["213","214","215","216"],"import React, { Component } from 'react';\r\n\r\n//imgs:\r\nimport profile from '../assets/imgs/profile.png'\r\nimport clock from '../assets/imgs/time.png'\r\nimport finish from '../assets/imgs/finish.png'\r\nimport round from '../assets/imgs/round.png'\r\n\r\n//icons:\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nexport function AboutMe() {\r\n\r\n    return (\r\n        <section className=\"about-me pf ttc\">\r\n            <div className=\"top pa flex column\">\r\n                <p className=\"tac\">adina zwebner</p>\r\n                <div className=\"pa\"><img src={profile} alt=\"\" /></div>\r\n            </div>\r\n            <main className=\"pa tac\">\r\n                <p>i'm a <b>full-stack web developer</b> who enjoys facing challenges, loves coding and turning imaginary ideas into “live” sites and web applications</p>\r\n            </main>\r\n            <span className=\"flex j-evenly pa\">Copyright <CopyrightIcon /> 2021 by adina zwebner </span>\r\n            <footer className=\"pa flex column ttc a-center j-evenly\">\r\n                <h2>contact me</h2>\r\n                <div className=\"flex j-evenly\">\r\n                    <a href=\"https://www.facebook.com/adina.zwebner\"><FacebookIcon /></a>\r\n                    <a href=\"https://github.com/adina9\"><GitHubIcon /></a>\r\n                    <a href=\"https://linkedin.com/in/adina-zwebner-451401205\"><LinkedInIcon /></a>\r\n                </div>\r\n            </footer>\r\n        </section>\r\n    );\r\n\r\n}\r\n",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":4,"column":17,"nodeType":"223","messageId":"224","endLine":4,"endColumn":26},{"ruleId":"225","severity":1,"message":"226","line":47,"column":15,"nodeType":"227","endLine":52,"endColumn":6},{"ruleId":"225","severity":1,"message":"228","line":52,"column":8,"nodeType":"229","endLine":52,"endColumn":10,"suggestions":"230"},{"ruleId":"221","severity":1,"message":"231","line":114,"column":17,"nodeType":"223","messageId":"224","endLine":114,"endColumn":21},{"ruleId":"221","severity":1,"message":"232","line":114,"column":32,"nodeType":"223","messageId":"224","endLine":114,"endColumn":43},{"ruleId":"221","severity":1,"message":"233","line":174,"column":35,"nodeType":"223","messageId":"224","endLine":174,"endColumn":39},{"ruleId":"221","severity":1,"message":"234","line":153,"column":53,"nodeType":"223","messageId":"224","endLine":153,"endColumn":60},{"ruleId":"221","severity":1,"message":"235","line":153,"column":62,"nodeType":"223","messageId":"224","endLine":153,"endColumn":76},{"ruleId":"221","severity":1,"message":"236","line":372,"column":9,"nodeType":"223","messageId":"224","endLine":372,"endColumn":16},{"ruleId":"221","severity":1,"message":"237","line":4,"column":16,"nodeType":"223","messageId":"224","endLine":4,"endColumn":22},{"ruleId":"221","severity":1,"message":"238","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":17},{"ruleId":"221","severity":1,"message":"232","line":143,"column":32,"nodeType":"223","messageId":"224","endLine":143,"endColumn":43},{"ruleId":"221","severity":1,"message":"239","line":179,"column":17,"nodeType":"223","messageId":"224","endLine":179,"endColumn":25},{"ruleId":"221","severity":1,"message":"240","line":184,"column":30,"nodeType":"223","messageId":"224","endLine":184,"endColumn":34},{"ruleId":"221","severity":1,"message":"241","line":265,"column":17,"nodeType":"223","messageId":"224","endLine":265,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":145,"column":13,"nodeType":"244","messageId":"245","endLine":157,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":160,"column":13,"nodeType":"244","messageId":"245","endLine":192,"endColumn":14},{"ruleId":"221","severity":1,"message":"231","line":77,"column":17,"nodeType":"223","messageId":"224","endLine":77,"endColumn":21},{"ruleId":"221","severity":1,"message":"246","line":242,"column":17,"nodeType":"223","messageId":"224","endLine":242,"endColumn":22},{"ruleId":"221","severity":1,"message":"231","line":361,"column":17,"nodeType":"223","messageId":"224","endLine":361,"endColumn":21},{"ruleId":"221","severity":1,"message":"233","line":363,"column":28,"nodeType":"223","messageId":"224","endLine":363,"endColumn":32},{"ruleId":"221","severity":1,"message":"246","line":365,"column":15,"nodeType":"223","messageId":"224","endLine":365,"endColumn":20},{"ruleId":"221","severity":1,"message":"232","line":368,"column":15,"nodeType":"223","messageId":"224","endLine":368,"endColumn":26},{"ruleId":"225","severity":1,"message":"247","line":38,"column":8,"nodeType":"229","endLine":38,"endColumn":10,"suggestions":"248"},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"249","line":14,"column":78,"nodeType":"223","messageId":"224","endLine":14,"endColumn":84},{"ruleId":"250","severity":1,"message":"251","line":22,"column":44,"nodeType":"252","endLine":22,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"231","line":20,"column":17,"nodeType":"223","messageId":"224","endLine":20,"endColumn":21},{"ruleId":"221","severity":1,"message":"253","line":148,"column":17,"nodeType":"223","messageId":"224","endLine":148,"endColumn":23},{"ruleId":"221","severity":1,"message":"254","line":2,"column":15,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"255","line":2,"column":25,"nodeType":"223","messageId":"224","endLine":2,"endColumn":29},{"ruleId":"221","severity":1,"message":"256","line":2,"column":31,"nodeType":"223","messageId":"224","endLine":2,"endColumn":34},{"ruleId":"225","severity":1,"message":"226","line":14,"column":15,"nodeType":"227","endLine":18,"endColumn":6},{"ruleId":"225","severity":1,"message":"257","line":18,"column":8,"nodeType":"229","endLine":18,"endColumn":10,"suggestions":"258"},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"259","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":13},{"ruleId":"221","severity":1,"message":"260","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":14},{"ruleId":"221","severity":1,"message":"261","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":13},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history' and 'loadData'. Either include them or remove the dependency array. If 'loadData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["264"],"'data' is assigned a value but never used.","'isOnDesktop' is assigned a value but never used.","'game' is assigned a value but never used.","'isExist' is assigned a value but never used.","'isCheckClicked' is assigned a value but never used.","'tempObj' is assigned a value but never used.","'Howler' is defined but never used.","'translate' is defined but never used.","'currLang' is assigned a value but never used.","'lang' is assigned a value but never used.","'currUser' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'level' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoriesNamesEnglish' and 'categoriesSrc'. Either include them or remove the dependency array.",["265"],"'points' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'states' is assigned a value but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","'Pie' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array. If 'loadData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["266"],"'clock' is defined but never used.","'finish' is defined but never used.","'round' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [history, loadData]",{"range":"273","text":"274"},"Update the dependencies array to be: [categoriesNamesEnglish, categoriesSrc]",{"range":"275","text":"276"},"Update the dependencies array to be: [loadData]",{"range":"277","text":"278"},[2171,2173],"[history, loadData]",[2038,2040],"[categoriesNamesEnglish, categoriesSrc]",[603,605],"[loadData]"]